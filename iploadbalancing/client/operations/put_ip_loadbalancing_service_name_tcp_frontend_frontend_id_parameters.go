// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/iploadbalancing/models"
)

// NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams creates a new PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams object
// with the default values initialized.
func NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams() *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	var ()
	return &PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithTimeout creates a new PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithTimeout(timeout time.Duration) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	var ()
	return &PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams{

		timeout: timeout,
	}
}

// NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithContext creates a new PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithContext(ctx context.Context) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	var ()
	return &PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams{

		Context: ctx,
	}
}

// NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithHTTPClient creates a new PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutIPLoadbalancingServiceNameTCPFrontendFrontendIDParamsWithHTTPClient(client *http.Client) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	var ()
	return &PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams{
		HTTPClient: client,
	}
}

/*PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams contains all the parameters to send to the API endpoint
for the put IP loadbalancing service name TCP frontend frontend ID operation typically these are written to a http.Request
*/
type PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams struct {

	/*FrontendID*/
	FrontendID int64
	/*IPLBTCPFrontendPut*/
	IPLBTCPFrontendPut *models.IPLBFrontendTCPFrontendTCP
	/*ServiceName*/
	ServiceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithTimeout(timeout time.Duration) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithContext(ctx context.Context) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithHTTPClient(client *http.Client) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrontendID adds the frontendID to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithFrontendID(frontendID int64) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetFrontendID(frontendID)
	return o
}

// SetFrontendID adds the frontendId to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetFrontendID(frontendID int64) {
	o.FrontendID = frontendID
}

// WithIPLBTCPFrontendPut adds the iPLBTCPFrontendPut to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithIPLBTCPFrontendPut(iPLBTCPFrontendPut *models.IPLBFrontendTCPFrontendTCP) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetIPLBTCPFrontendPut(iPLBTCPFrontendPut)
	return o
}

// SetIPLBTCPFrontendPut adds the iplbTcpFrontendPut to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetIPLBTCPFrontendPut(iPLBTCPFrontendPut *models.IPLBFrontendTCPFrontendTCP) {
	o.IPLBTCPFrontendPut = iPLBTCPFrontendPut
}

// WithServiceName adds the serviceName to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WithServiceName(serviceName string) *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the put IP loadbalancing service name TCP frontend frontend ID params
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WriteToRequest writes these params to a swagger request
func (o *PutIPLoadbalancingServiceNameTCPFrontendFrontendIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param frontendId
	if err := r.SetPathParam("frontendId", swag.FormatInt64(o.FrontendID)); err != nil {
		return err
	}

	if o.IPLBTCPFrontendPut != nil {
		if err := r.SetBodyParam(o.IPLBTCPFrontendPut); err != nil {
			return err
		}
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

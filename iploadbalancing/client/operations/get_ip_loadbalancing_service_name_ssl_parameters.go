// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetIPLoadbalancingServiceNameSslParams creates a new GetIPLoadbalancingServiceNameSslParams object
// with the default values initialized.
func NewGetIPLoadbalancingServiceNameSslParams() *GetIPLoadbalancingServiceNameSslParams {
	var ()
	return &GetIPLoadbalancingServiceNameSslParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIPLoadbalancingServiceNameSslParamsWithTimeout creates a new GetIPLoadbalancingServiceNameSslParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIPLoadbalancingServiceNameSslParamsWithTimeout(timeout time.Duration) *GetIPLoadbalancingServiceNameSslParams {
	var ()
	return &GetIPLoadbalancingServiceNameSslParams{

		timeout: timeout,
	}
}

// NewGetIPLoadbalancingServiceNameSslParamsWithContext creates a new GetIPLoadbalancingServiceNameSslParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIPLoadbalancingServiceNameSslParamsWithContext(ctx context.Context) *GetIPLoadbalancingServiceNameSslParams {
	var ()
	return &GetIPLoadbalancingServiceNameSslParams{

		Context: ctx,
	}
}

// NewGetIPLoadbalancingServiceNameSslParamsWithHTTPClient creates a new GetIPLoadbalancingServiceNameSslParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIPLoadbalancingServiceNameSslParamsWithHTTPClient(client *http.Client) *GetIPLoadbalancingServiceNameSslParams {
	var ()
	return &GetIPLoadbalancingServiceNameSslParams{
		HTTPClient: client,
	}
}

/*GetIPLoadbalancingServiceNameSslParams contains all the parameters to send to the API endpoint
for the get IP loadbalancing service name ssl operation typically these are written to a http.Request
*/
type GetIPLoadbalancingServiceNameSslParams struct {

	/*Fingerprint*/
	Fingerprint *string
	/*Serial*/
	Serial *string
	/*ServiceName*/
	ServiceName string
	/*Type*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithTimeout(timeout time.Duration) *GetIPLoadbalancingServiceNameSslParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithContext(ctx context.Context) *GetIPLoadbalancingServiceNameSslParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithHTTPClient(client *http.Client) *GetIPLoadbalancingServiceNameSslParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFingerprint adds the fingerprint to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithFingerprint(fingerprint *string) *GetIPLoadbalancingServiceNameSslParams {
	o.SetFingerprint(fingerprint)
	return o
}

// SetFingerprint adds the fingerprint to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetFingerprint(fingerprint *string) {
	o.Fingerprint = fingerprint
}

// WithSerial adds the serial to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithSerial(serial *string) *GetIPLoadbalancingServiceNameSslParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetSerial(serial *string) {
	o.Serial = serial
}

// WithServiceName adds the serviceName to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithServiceName(serviceName string) *GetIPLoadbalancingServiceNameSslParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithType adds the typeVar to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) WithType(typeVar *string) *GetIPLoadbalancingServiceNameSslParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get IP loadbalancing service name ssl params
func (o *GetIPLoadbalancingServiceNameSslParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetIPLoadbalancingServiceNameSslParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fingerprint != nil {

		// query param fingerprint
		var qrFingerprint string
		if o.Fingerprint != nil {
			qrFingerprint = *o.Fingerprint
		}
		qFingerprint := qrFingerprint
		if qFingerprint != "" {
			if err := r.SetQueryParam("fingerprint", qFingerprint); err != nil {
				return err
			}
		}

	}

	if o.Serial != nil {

		// query param serial
		var qrSerial string
		if o.Serial != nil {
			qrSerial = *o.Serial
		}
		qSerial := qrSerial
		if qSerial != "" {
			if err := r.SetQueryParam("serial", qSerial); err != nil {
				return err
			}
		}

	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/iploadbalancing/models"
)

// PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleReader is a Reader for the PostIPLoadbalancingServiceNameTCPRouteRouteIDRule structure.
type PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK creates a PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK with default headers values
func NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK() *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK {
	return &PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK{}
}

/*PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK handles this case with default header values.

description of 'iplb.RouteRule.RouteRule' response
*/
type PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK struct {
	Payload *models.IPLBRouteRuleRouteRule
}

func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK) Error() string {
	return fmt.Sprintf("[POST /ipLoadbalancing/{serviceName}/tcp/route/{routeId}/rule][%d] postIpLoadbalancingServiceNameTcpRouteRouteIdRuleOK  %+v", 200, o.Payload)
}

func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPLBRouteRuleRouteRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault creates a PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault with default headers values
func NewPostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault(code int) *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault {
	return &PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault{
		_statusCode: code,
	}
}

/*PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault handles this case with default header values.

Unexpected error
*/
type PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault struct {
	_statusCode int

	Payload *models.PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefaultBody
}

// Code gets the status code for the post IP loadbalancing service name TCP route route ID rule default response
func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault) Code() int {
	return o._statusCode
}

func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault) Error() string {
	return fmt.Sprintf("[POST /ipLoadbalancing/{serviceName}/tcp/route/{routeId}/rule][%d] PostIPLoadbalancingServiceNameTCPRouteRouteIDRule default  %+v", o._statusCode, o.Payload)
}

func (o *PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostIPLoadbalancingServiceNameTCPRouteRouteIDRuleDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

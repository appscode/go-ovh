// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/vps/models"
)

// NewPutVpsServiceNameDisksIDParams creates a new PutVpsServiceNameDisksIDParams object
// with the default values initialized.
func NewPutVpsServiceNameDisksIDParams() *PutVpsServiceNameDisksIDParams {
	var ()
	return &PutVpsServiceNameDisksIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutVpsServiceNameDisksIDParamsWithTimeout creates a new PutVpsServiceNameDisksIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutVpsServiceNameDisksIDParamsWithTimeout(timeout time.Duration) *PutVpsServiceNameDisksIDParams {
	var ()
	return &PutVpsServiceNameDisksIDParams{

		timeout: timeout,
	}
}

// NewPutVpsServiceNameDisksIDParamsWithContext creates a new PutVpsServiceNameDisksIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutVpsServiceNameDisksIDParamsWithContext(ctx context.Context) *PutVpsServiceNameDisksIDParams {
	var ()
	return &PutVpsServiceNameDisksIDParams{

		Context: ctx,
	}
}

// NewPutVpsServiceNameDisksIDParamsWithHTTPClient creates a new PutVpsServiceNameDisksIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutVpsServiceNameDisksIDParamsWithHTTPClient(client *http.Client) *PutVpsServiceNameDisksIDParams {
	var ()
	return &PutVpsServiceNameDisksIDParams{
		HTTPClient: client,
	}
}

/*PutVpsServiceNameDisksIDParams contains all the parameters to send to the API endpoint
for the put vps service name disks ID operation typically these are written to a http.Request
*/
type PutVpsServiceNameDisksIDParams struct {

	/*ID*/
	ID int64
	/*ServiceName*/
	ServiceName string
	/*VpsDisksPut*/
	VpsDisksPut *models.VpsDisk

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithTimeout(timeout time.Duration) *PutVpsServiceNameDisksIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithContext(ctx context.Context) *PutVpsServiceNameDisksIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithHTTPClient(client *http.Client) *PutVpsServiceNameDisksIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithID(id int64) *PutVpsServiceNameDisksIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetID(id int64) {
	o.ID = id
}

// WithServiceName adds the serviceName to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithServiceName(serviceName string) *PutVpsServiceNameDisksIDParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithVpsDisksPut adds the vpsDisksPut to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) WithVpsDisksPut(vpsDisksPut *models.VpsDisk) *PutVpsServiceNameDisksIDParams {
	o.SetVpsDisksPut(vpsDisksPut)
	return o
}

// SetVpsDisksPut adds the vpsDisksPut to the put vps service name disks ID params
func (o *PutVpsServiceNameDisksIDParams) SetVpsDisksPut(vpsDisksPut *models.VpsDisk) {
	o.VpsDisksPut = vpsDisksPut
}

// WriteToRequest writes these params to a swagger request
func (o *PutVpsServiceNameDisksIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if o.VpsDisksPut != nil {
		if err := r.SetBodyParam(o.VpsDisksPut); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

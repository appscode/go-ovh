// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/domain/models"
)

// GetDomainServiceNameDsRecordIDReader is a Reader for the GetDomainServiceNameDsRecordID structure.
type GetDomainServiceNameDsRecordIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomainServiceNameDsRecordIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDomainServiceNameDsRecordIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDomainServiceNameDsRecordIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDomainServiceNameDsRecordIDOK creates a GetDomainServiceNameDsRecordIDOK with default headers values
func NewGetDomainServiceNameDsRecordIDOK() *GetDomainServiceNameDsRecordIDOK {
	return &GetDomainServiceNameDsRecordIDOK{}
}

/*GetDomainServiceNameDsRecordIDOK handles this case with default header values.

description of 'domain.DnssecKey' response
*/
type GetDomainServiceNameDsRecordIDOK struct {
	Payload *models.DomainDnssecKey
}

func (o *GetDomainServiceNameDsRecordIDOK) Error() string {
	return fmt.Sprintf("[GET /domain/{serviceName}/dsRecord/{id}][%d] getDomainServiceNameDsRecordIdOK  %+v", 200, o.Payload)
}

func (o *GetDomainServiceNameDsRecordIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomainDnssecKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomainServiceNameDsRecordIDDefault creates a GetDomainServiceNameDsRecordIDDefault with default headers values
func NewGetDomainServiceNameDsRecordIDDefault(code int) *GetDomainServiceNameDsRecordIDDefault {
	return &GetDomainServiceNameDsRecordIDDefault{
		_statusCode: code,
	}
}

/*GetDomainServiceNameDsRecordIDDefault handles this case with default header values.

Unexpected error
*/
type GetDomainServiceNameDsRecordIDDefault struct {
	_statusCode int

	Payload *models.GetDomainServiceNameDsRecordIDDefaultBody
}

// Code gets the status code for the get domain service name ds record ID default response
func (o *GetDomainServiceNameDsRecordIDDefault) Code() int {
	return o._statusCode
}

func (o *GetDomainServiceNameDsRecordIDDefault) Error() string {
	return fmt.Sprintf("[GET /domain/{serviceName}/dsRecord/{id}][%d] GetDomainServiceNameDsRecordID default  %+v", o._statusCode, o.Payload)
}

func (o *GetDomainServiceNameDsRecordIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDomainServiceNameDsRecordIDDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

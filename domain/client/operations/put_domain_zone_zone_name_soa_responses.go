// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/domain/models"
)

// PutDomainZoneZoneNameSoaReader is a Reader for the PutDomainZoneZoneNameSoa structure.
type PutDomainZoneZoneNameSoaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDomainZoneZoneNameSoaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutDomainZoneZoneNameSoaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPutDomainZoneZoneNameSoaDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutDomainZoneZoneNameSoaOK creates a PutDomainZoneZoneNameSoaOK with default headers values
func NewPutDomainZoneZoneNameSoaOK() *PutDomainZoneZoneNameSoaOK {
	return &PutDomainZoneZoneNameSoaOK{}
}

/*PutDomainZoneZoneNameSoaOK handles this case with default header values.

return 'void'
*/
type PutDomainZoneZoneNameSoaOK struct {
}

func (o *PutDomainZoneZoneNameSoaOK) Error() string {
	return fmt.Sprintf("[PUT /domain/zone/{zoneName}/soa][%d] putDomainZoneZoneNameSoaOK ", 200)
}

func (o *PutDomainZoneZoneNameSoaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDomainZoneZoneNameSoaDefault creates a PutDomainZoneZoneNameSoaDefault with default headers values
func NewPutDomainZoneZoneNameSoaDefault(code int) *PutDomainZoneZoneNameSoaDefault {
	return &PutDomainZoneZoneNameSoaDefault{
		_statusCode: code,
	}
}

/*PutDomainZoneZoneNameSoaDefault handles this case with default header values.

Unexpected error
*/
type PutDomainZoneZoneNameSoaDefault struct {
	_statusCode int

	Payload *models.PutDomainZoneZoneNameSoaDefaultBody
}

// Code gets the status code for the put domain zone zone name soa default response
func (o *PutDomainZoneZoneNameSoaDefault) Code() int {
	return o._statusCode
}

func (o *PutDomainZoneZoneNameSoaDefault) Error() string {
	return fmt.Sprintf("[PUT /domain/zone/{zoneName}/soa][%d] PutDomainZoneZoneNameSoa default  %+v", o._statusCode, o.Payload)
}

func (o *PutDomainZoneZoneNameSoaDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutDomainZoneZoneNameSoaDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

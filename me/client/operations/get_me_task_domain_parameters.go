// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetMeTaskDomainParams creates a new GetMeTaskDomainParams object
// with the default values initialized.
func NewGetMeTaskDomainParams() *GetMeTaskDomainParams {
	var ()
	return &GetMeTaskDomainParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetMeTaskDomainParamsWithTimeout creates a new GetMeTaskDomainParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetMeTaskDomainParamsWithTimeout(timeout time.Duration) *GetMeTaskDomainParams {
	var ()
	return &GetMeTaskDomainParams{

		timeout: timeout,
	}
}

// NewGetMeTaskDomainParamsWithContext creates a new GetMeTaskDomainParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetMeTaskDomainParamsWithContext(ctx context.Context) *GetMeTaskDomainParams {
	var ()
	return &GetMeTaskDomainParams{

		Context: ctx,
	}
}

// NewGetMeTaskDomainParamsWithHTTPClient creates a new GetMeTaskDomainParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetMeTaskDomainParamsWithHTTPClient(client *http.Client) *GetMeTaskDomainParams {
	var ()
	return &GetMeTaskDomainParams{
		HTTPClient: client,
	}
}

/*GetMeTaskDomainParams contains all the parameters to send to the API endpoint
for the get me task domain operation typically these are written to a http.Request
*/
type GetMeTaskDomainParams struct {

	/*Domain*/
	Domain *string
	/*Function*/
	Function *string
	/*Status*/
	Status *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get me task domain params
func (o *GetMeTaskDomainParams) WithTimeout(timeout time.Duration) *GetMeTaskDomainParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get me task domain params
func (o *GetMeTaskDomainParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get me task domain params
func (o *GetMeTaskDomainParams) WithContext(ctx context.Context) *GetMeTaskDomainParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get me task domain params
func (o *GetMeTaskDomainParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get me task domain params
func (o *GetMeTaskDomainParams) WithHTTPClient(client *http.Client) *GetMeTaskDomainParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get me task domain params
func (o *GetMeTaskDomainParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomain adds the domain to the get me task domain params
func (o *GetMeTaskDomainParams) WithDomain(domain *string) *GetMeTaskDomainParams {
	o.SetDomain(domain)
	return o
}

// SetDomain adds the domain to the get me task domain params
func (o *GetMeTaskDomainParams) SetDomain(domain *string) {
	o.Domain = domain
}

// WithFunction adds the function to the get me task domain params
func (o *GetMeTaskDomainParams) WithFunction(function *string) *GetMeTaskDomainParams {
	o.SetFunction(function)
	return o
}

// SetFunction adds the function to the get me task domain params
func (o *GetMeTaskDomainParams) SetFunction(function *string) {
	o.Function = function
}

// WithStatus adds the status to the get me task domain params
func (o *GetMeTaskDomainParams) WithStatus(status *string) *GetMeTaskDomainParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get me task domain params
func (o *GetMeTaskDomainParams) SetStatus(status *string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetMeTaskDomainParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Domain != nil {

		// query param domain
		var qrDomain string
		if o.Domain != nil {
			qrDomain = *o.Domain
		}
		qDomain := qrDomain
		if qDomain != "" {
			if err := r.SetQueryParam("domain", qDomain); err != nil {
				return err
			}
		}

	}

	if o.Function != nil {

		// query param function
		var qrFunction string
		if o.Function != nil {
			qrFunction = *o.Function
		}
		qFunction := qrFunction
		if qFunction != "" {
			if err := r.SetQueryParam("function", qFunction); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

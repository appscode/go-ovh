// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/me/models"
)

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams object
// with the default values initialized.
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams() *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithTimeout creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithTimeout(timeout time.Duration) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams{

		timeout: timeout,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithContext creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithContext(ctx context.Context) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams{

		Context: ctx,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithHTTPClient creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsWithHTTPClient(client *http.Client) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams{
		HTTPClient: client,
	}
}

/*PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams contains all the parameters to send to the API endpoint
for the post me installation template template name partition scheme scheme name hardware raid operation typically these are written to a http.Request
*/
type PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams struct {

	/*MeInstallationTemplatePartitionSchemeHardwareRaidPost*/
	MeInstallationTemplatePartitionSchemeHardwareRaidPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsBody
	/*SchemeName*/
	SchemeName string
	/*TemplateName*/
	TemplateName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithTimeout(timeout time.Duration) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithContext(ctx context.Context) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithHTTPClient(client *http.Client) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMeInstallationTemplatePartitionSchemeHardwareRaidPost adds the meInstallationTemplatePartitionSchemeHardwareRaidPost to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithMeInstallationTemplatePartitionSchemeHardwareRaidPost(meInstallationTemplatePartitionSchemeHardwareRaidPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsBody) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetMeInstallationTemplatePartitionSchemeHardwareRaidPost(meInstallationTemplatePartitionSchemeHardwareRaidPost)
	return o
}

// SetMeInstallationTemplatePartitionSchemeHardwareRaidPost adds the meInstallationTemplatePartitionSchemeHardwareRaidPost to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetMeInstallationTemplatePartitionSchemeHardwareRaidPost(meInstallationTemplatePartitionSchemeHardwareRaidPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParamsBody) {
	o.MeInstallationTemplatePartitionSchemeHardwareRaidPost = meInstallationTemplatePartitionSchemeHardwareRaidPost
}

// WithSchemeName adds the schemeName to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithSchemeName(schemeName string) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetSchemeName(schemeName)
	return o
}

// SetSchemeName adds the schemeName to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetSchemeName(schemeName string) {
	o.SchemeName = schemeName
}

// WithTemplateName adds the templateName to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WithTemplateName(templateName string) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the post me installation template template name partition scheme scheme name hardware raid params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) SetTemplateName(templateName string) {
	o.TemplateName = templateName
}

// WriteToRequest writes these params to a swagger request
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MeInstallationTemplatePartitionSchemeHardwareRaidPost != nil {
		if err := r.SetBodyParam(o.MeInstallationTemplatePartitionSchemeHardwareRaidPost); err != nil {
			return err
		}
	}

	// path param schemeName
	if err := r.SetPathParam("schemeName", o.SchemeName); err != nil {
		return err
	}

	// path param templateName
	if err := r.SetPathParam("templateName", o.TemplateName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

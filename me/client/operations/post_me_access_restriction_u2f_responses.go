// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/me/models"
)

// PostMeAccessRestrictionU2fReader is a Reader for the PostMeAccessRestrictionU2f structure.
type PostMeAccessRestrictionU2fReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMeAccessRestrictionU2fReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostMeAccessRestrictionU2fOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostMeAccessRestrictionU2fDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostMeAccessRestrictionU2fOK creates a PostMeAccessRestrictionU2fOK with default headers values
func NewPostMeAccessRestrictionU2fOK() *PostMeAccessRestrictionU2fOK {
	return &PostMeAccessRestrictionU2fOK{}
}

/*PostMeAccessRestrictionU2fOK handles this case with default header values.

description of 'nichandle.AccessRestriction.U2FRegisterChallenge' response
*/
type PostMeAccessRestrictionU2fOK struct {
	Payload *models.NichandleAccessRestrictionU2FRegisterChallenge
}

func (o *PostMeAccessRestrictionU2fOK) Error() string {
	return fmt.Sprintf("[POST /me/accessRestriction/u2f][%d] postMeAccessRestrictionU2fOK  %+v", 200, o.Payload)
}

func (o *PostMeAccessRestrictionU2fOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NichandleAccessRestrictionU2FRegisterChallenge)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMeAccessRestrictionU2fDefault creates a PostMeAccessRestrictionU2fDefault with default headers values
func NewPostMeAccessRestrictionU2fDefault(code int) *PostMeAccessRestrictionU2fDefault {
	return &PostMeAccessRestrictionU2fDefault{
		_statusCode: code,
	}
}

/*PostMeAccessRestrictionU2fDefault handles this case with default header values.

Unexpected error
*/
type PostMeAccessRestrictionU2fDefault struct {
	_statusCode int

	Payload *models.PostMeAccessRestrictionU2fDefaultBody
}

// Code gets the status code for the post me access restriction u2f default response
func (o *PostMeAccessRestrictionU2fDefault) Code() int {
	return o._statusCode
}

func (o *PostMeAccessRestrictionU2fDefault) Error() string {
	return fmt.Sprintf("[POST /me/accessRestriction/u2f][%d] PostMeAccessRestrictionU2f default  %+v", o._statusCode, o.Payload)
}

func (o *PostMeAccessRestrictionU2fDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostMeAccessRestrictionU2fDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

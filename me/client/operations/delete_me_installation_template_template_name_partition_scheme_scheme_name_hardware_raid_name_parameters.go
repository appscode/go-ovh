// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams creates a new DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams object
// with the default values initialized.
func NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams() *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	var ()
	return &DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithTimeout creates a new DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithTimeout(timeout time.Duration) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	var ()
	return &DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams{

		timeout: timeout,
	}
}

// NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithContext creates a new DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithContext(ctx context.Context) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	var ()
	return &DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams{

		Context: ctx,
	}
}

// NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithHTTPClient creates a new DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParamsWithHTTPClient(client *http.Client) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	var ()
	return &DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams{
		HTTPClient: client,
	}
}

/*DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams contains all the parameters to send to the API endpoint
for the delete me installation template template name partition scheme scheme name hardware raid name operation typically these are written to a http.Request
*/
type DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams struct {

	/*Name*/
	Name string
	/*SchemeName*/
	SchemeName string
	/*TemplateName*/
	TemplateName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithTimeout(timeout time.Duration) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithContext(ctx context.Context) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithHTTPClient(client *http.Client) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithName(name string) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetName(name string) {
	o.Name = name
}

// WithSchemeName adds the schemeName to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithSchemeName(schemeName string) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetSchemeName(schemeName)
	return o
}

// SetSchemeName adds the schemeName to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetSchemeName(schemeName string) {
	o.SchemeName = schemeName
}

// WithTemplateName adds the templateName to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WithTemplateName(templateName string) *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the delete me installation template template name partition scheme scheme name hardware raid name params
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) SetTemplateName(templateName string) {
	o.TemplateName = templateName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMeInstallationTemplateTemplateNamePartitionSchemeSchemeNameHardwareRaidNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param schemeName
	if err := r.SetPathParam("schemeName", o.SchemeName); err != nil {
		return err
	}

	// path param templateName
	if err := r.SetPathParam("templateName", o.TemplateName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/appscode/go-ovh/me/models"
)

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams object
// with the default values initialized.
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams() *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithTimeout creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithTimeout(timeout time.Duration) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams{

		timeout: timeout,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithContext creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithContext(ctx context.Context) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams{

		Context: ctx,
	}
}

// NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithHTTPClient creates a new PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsWithHTTPClient(client *http.Client) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	var ()
	return &PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams{
		HTTPClient: client,
	}
}

/*PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams contains all the parameters to send to the API endpoint
for the post me installation template template name partition scheme scheme name partition operation typically these are written to a http.Request
*/
type PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams struct {

	/*MeInstallationTemplatePartitionSchemePartitionPost*/
	MeInstallationTemplatePartitionSchemePartitionPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsBody
	/*SchemeName*/
	SchemeName string
	/*TemplateName*/
	TemplateName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithTimeout(timeout time.Duration) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithContext(ctx context.Context) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithHTTPClient(client *http.Client) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMeInstallationTemplatePartitionSchemePartitionPost adds the meInstallationTemplatePartitionSchemePartitionPost to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithMeInstallationTemplatePartitionSchemePartitionPost(meInstallationTemplatePartitionSchemePartitionPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsBody) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetMeInstallationTemplatePartitionSchemePartitionPost(meInstallationTemplatePartitionSchemePartitionPost)
	return o
}

// SetMeInstallationTemplatePartitionSchemePartitionPost adds the meInstallationTemplatePartitionSchemePartitionPost to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetMeInstallationTemplatePartitionSchemePartitionPost(meInstallationTemplatePartitionSchemePartitionPost *models.PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParamsBody) {
	o.MeInstallationTemplatePartitionSchemePartitionPost = meInstallationTemplatePartitionSchemePartitionPost
}

// WithSchemeName adds the schemeName to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithSchemeName(schemeName string) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetSchemeName(schemeName)
	return o
}

// SetSchemeName adds the schemeName to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetSchemeName(schemeName string) {
	o.SchemeName = schemeName
}

// WithTemplateName adds the templateName to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WithTemplateName(templateName string) *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the post me installation template template name partition scheme scheme name partition params
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) SetTemplateName(templateName string) {
	o.TemplateName = templateName
}

// WriteToRequest writes these params to a swagger request
func (o *PostMeInstallationTemplateTemplateNamePartitionSchemeSchemeNamePartitionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MeInstallationTemplatePartitionSchemePartitionPost != nil {
		if err := r.SetBodyParam(o.MeInstallationTemplatePartitionSchemePartitionPost); err != nil {
			return err
		}
	}

	// path param schemeName
	if err := r.SetPathParam("schemeName", o.SchemeName); err != nil {
		return err
	}

	// path param templateName
	if err := r.SetPathParam("templateName", o.TemplateName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostMeOrderOrderIDRetractionParamsBody post me order order Id retraction params body
// swagger:model postMeOrderOrderIdRetractionParamsBody
type PostMeOrderOrderIDRetractionParamsBody struct {

	// comment
	Comment string `json:"comment,omitempty"`

	// reason
	// Required: true
	Reason *string `json:"reason"`
}

// Validate validates this post me order order Id retraction params body
func (m *PostMeOrderOrderIDRetractionParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReason(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postMeOrderOrderIdRetractionParamsBodyTypeReasonPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["competitor","difficulty","expensive","other","performance","reliability","unused"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postMeOrderOrderIdRetractionParamsBodyTypeReasonPropEnum = append(postMeOrderOrderIdRetractionParamsBodyTypeReasonPropEnum, v)
	}
}

const (
	// PostMeOrderOrderIDRetractionParamsBodyReasonCompetitor captures enum value "competitor"
	PostMeOrderOrderIDRetractionParamsBodyReasonCompetitor string = "competitor"
	// PostMeOrderOrderIDRetractionParamsBodyReasonDifficulty captures enum value "difficulty"
	PostMeOrderOrderIDRetractionParamsBodyReasonDifficulty string = "difficulty"
	// PostMeOrderOrderIDRetractionParamsBodyReasonExpensive captures enum value "expensive"
	PostMeOrderOrderIDRetractionParamsBodyReasonExpensive string = "expensive"
	// PostMeOrderOrderIDRetractionParamsBodyReasonOther captures enum value "other"
	PostMeOrderOrderIDRetractionParamsBodyReasonOther string = "other"
	// PostMeOrderOrderIDRetractionParamsBodyReasonPerformance captures enum value "performance"
	PostMeOrderOrderIDRetractionParamsBodyReasonPerformance string = "performance"
	// PostMeOrderOrderIDRetractionParamsBodyReasonReliability captures enum value "reliability"
	PostMeOrderOrderIDRetractionParamsBodyReasonReliability string = "reliability"
	// PostMeOrderOrderIDRetractionParamsBodyReasonUnused captures enum value "unused"
	PostMeOrderOrderIDRetractionParamsBodyReasonUnused string = "unused"
)

// prop value enum
func (m *PostMeOrderOrderIDRetractionParamsBody) validateReasonEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postMeOrderOrderIdRetractionParamsBodyTypeReasonPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PostMeOrderOrderIDRetractionParamsBody) validateReason(formats strfmt.Registry) error {

	if err := validate.Required("reason", "body", m.Reason); err != nil {
		return err
	}

	// value enum
	if err := m.validateReasonEnum("reason", "body", *m.Reason); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PostMeOrderOrderIDRetractionParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostMeOrderOrderIDRetractionParamsBody) UnmarshalBinary(b []byte) error {
	var res PostMeOrderOrderIDRetractionParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

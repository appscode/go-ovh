// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DebtAssociatedObjectPaymentInfo The payment infos linked to this debt entry
// swagger:model debt.AssociatedObject.PaymentInfo
type DebtAssociatedObjectPaymentInfo struct {

	// Optional customer description
	Description string `json:"description,omitempty"`

	// Payment mean used for this debt operation
	PaymentType string `json:"paymentType,omitempty"`

	// Public payment mean label
	PublicLabel string `json:"publicLabel,omitempty"`
}

// Validate validates this debt associated object payment info
func (m *DebtAssociatedObjectPaymentInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePaymentType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var debtAssociatedObjectPaymentInfoTypePaymentTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cash","chargeback","cheque","creditCard","debtAccount","deposit","digitalLaunchPad","edinar","fidelityPoints","free","ideal","incubatorAccount","mandat","multibanco","none","ovhAccount","paymentMandate","paypal","payu","platnosci","refund","transfer","withdrawal"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		debtAssociatedObjectPaymentInfoTypePaymentTypePropEnum = append(debtAssociatedObjectPaymentInfoTypePaymentTypePropEnum, v)
	}
}

const (
	// DebtAssociatedObjectPaymentInfoPaymentTypeCash captures enum value "cash"
	DebtAssociatedObjectPaymentInfoPaymentTypeCash string = "cash"
	// DebtAssociatedObjectPaymentInfoPaymentTypeChargeback captures enum value "chargeback"
	DebtAssociatedObjectPaymentInfoPaymentTypeChargeback string = "chargeback"
	// DebtAssociatedObjectPaymentInfoPaymentTypeCheque captures enum value "cheque"
	DebtAssociatedObjectPaymentInfoPaymentTypeCheque string = "cheque"
	// DebtAssociatedObjectPaymentInfoPaymentTypeCreditCard captures enum value "creditCard"
	DebtAssociatedObjectPaymentInfoPaymentTypeCreditCard string = "creditCard"
	// DebtAssociatedObjectPaymentInfoPaymentTypeDebtAccount captures enum value "debtAccount"
	DebtAssociatedObjectPaymentInfoPaymentTypeDebtAccount string = "debtAccount"
	// DebtAssociatedObjectPaymentInfoPaymentTypeDeposit captures enum value "deposit"
	DebtAssociatedObjectPaymentInfoPaymentTypeDeposit string = "deposit"
	// DebtAssociatedObjectPaymentInfoPaymentTypeDigitalLaunchPad captures enum value "digitalLaunchPad"
	DebtAssociatedObjectPaymentInfoPaymentTypeDigitalLaunchPad string = "digitalLaunchPad"
	// DebtAssociatedObjectPaymentInfoPaymentTypeEdinar captures enum value "edinar"
	DebtAssociatedObjectPaymentInfoPaymentTypeEdinar string = "edinar"
	// DebtAssociatedObjectPaymentInfoPaymentTypeFidelityPoints captures enum value "fidelityPoints"
	DebtAssociatedObjectPaymentInfoPaymentTypeFidelityPoints string = "fidelityPoints"
	// DebtAssociatedObjectPaymentInfoPaymentTypeFree captures enum value "free"
	DebtAssociatedObjectPaymentInfoPaymentTypeFree string = "free"
	// DebtAssociatedObjectPaymentInfoPaymentTypeIdeal captures enum value "ideal"
	DebtAssociatedObjectPaymentInfoPaymentTypeIdeal string = "ideal"
	// DebtAssociatedObjectPaymentInfoPaymentTypeIncubatorAccount captures enum value "incubatorAccount"
	DebtAssociatedObjectPaymentInfoPaymentTypeIncubatorAccount string = "incubatorAccount"
	// DebtAssociatedObjectPaymentInfoPaymentTypeMandat captures enum value "mandat"
	DebtAssociatedObjectPaymentInfoPaymentTypeMandat string = "mandat"
	// DebtAssociatedObjectPaymentInfoPaymentTypeMultibanco captures enum value "multibanco"
	DebtAssociatedObjectPaymentInfoPaymentTypeMultibanco string = "multibanco"
	// DebtAssociatedObjectPaymentInfoPaymentTypeNone captures enum value "none"
	DebtAssociatedObjectPaymentInfoPaymentTypeNone string = "none"
	// DebtAssociatedObjectPaymentInfoPaymentTypeOvhAccount captures enum value "ovhAccount"
	DebtAssociatedObjectPaymentInfoPaymentTypeOvhAccount string = "ovhAccount"
	// DebtAssociatedObjectPaymentInfoPaymentTypePaymentMandate captures enum value "paymentMandate"
	DebtAssociatedObjectPaymentInfoPaymentTypePaymentMandate string = "paymentMandate"
	// DebtAssociatedObjectPaymentInfoPaymentTypePaypal captures enum value "paypal"
	DebtAssociatedObjectPaymentInfoPaymentTypePaypal string = "paypal"
	// DebtAssociatedObjectPaymentInfoPaymentTypePayu captures enum value "payu"
	DebtAssociatedObjectPaymentInfoPaymentTypePayu string = "payu"
	// DebtAssociatedObjectPaymentInfoPaymentTypePlatnosci captures enum value "platnosci"
	DebtAssociatedObjectPaymentInfoPaymentTypePlatnosci string = "platnosci"
	// DebtAssociatedObjectPaymentInfoPaymentTypeRefund captures enum value "refund"
	DebtAssociatedObjectPaymentInfoPaymentTypeRefund string = "refund"
	// DebtAssociatedObjectPaymentInfoPaymentTypeTransfer captures enum value "transfer"
	DebtAssociatedObjectPaymentInfoPaymentTypeTransfer string = "transfer"
	// DebtAssociatedObjectPaymentInfoPaymentTypeWithdrawal captures enum value "withdrawal"
	DebtAssociatedObjectPaymentInfoPaymentTypeWithdrawal string = "withdrawal"
)

// prop value enum
func (m *DebtAssociatedObjectPaymentInfo) validatePaymentTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, debtAssociatedObjectPaymentInfoTypePaymentTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DebtAssociatedObjectPaymentInfo) validatePaymentType(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePaymentTypeEnum("paymentType", "body", m.PaymentType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DebtAssociatedObjectPaymentInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DebtAssociatedObjectPaymentInfo) UnmarshalBinary(b []byte) error {
	var res DebtAssociatedObjectPaymentInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactContact Representation of a Contact
// swagger:model contact.Contact
type ContactContact struct {

	// address
	Address *ContactAddress `json:"address,omitempty"`

	// Birth city
	BirthCity string `json:"birthCity,omitempty"`

	// Birth Country
	BirthCountry string `json:"birthCountry,omitempty"`

	// Birth date
	BirthDay strfmt.Date `json:"birthDay,omitempty"`

	// Birth Zipcode
	BirthZip string `json:"birthZip,omitempty"`

	// Cellphone number
	CellPhone string `json:"cellPhone,omitempty"`

	// National identification number of your company
	CompanyNationalIdentificationNumber string `json:"companyNationalIdentificationNumber,omitempty"`

	// Email address
	Email string `json:"email,omitempty"`

	// Fax number
	Fax string `json:"fax,omitempty"`

	// First name
	FirstName string `json:"firstName,omitempty"`

	// Gender
	Gender string `json:"gender,omitempty"`

	// Contact Identifier
	// Required: true
	// Read Only: true
	ID int64 `json:"id"`

	// Language
	Language string `json:"language,omitempty"`

	// Last name
	LastName string `json:"lastName,omitempty"`

	// Legal form of the contact
	LegalForm string `json:"legalForm,omitempty"`

	// National identification number of the contact
	NationalIdentificationNumber string `json:"nationalIdentificationNumber,omitempty"`

	// Nationality
	Nationality string `json:"nationality,omitempty"`

	// Organisation name
	OrganisationName string `json:"organisationName,omitempty"`

	// Organisation type
	OrganisationType string `json:"organisationType,omitempty"`

	// Telephone number
	Phone string `json:"phone,omitempty"`

	// Spare email address
	SpareEmail string `json:"spareEmail,omitempty"`

	// VAT number
	Vat string `json:"vat,omitempty"`
}

// Validate validates this contact contact
func (m *ContactContact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBirthCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGender(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLanguage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLegalForm(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNationality(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactContact) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if m.Address != nil {

		if err := m.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("address")
			}
			return err
		}
	}

	return nil
}

var contactContactTypeBirthCountryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AC","AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","UNKNOWN","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactContactTypeBirthCountryPropEnum = append(contactContactTypeBirthCountryPropEnum, v)
	}
}

const (
	// ContactContactBirthCountryAC captures enum value "AC"
	ContactContactBirthCountryAC string = "AC"
	// ContactContactBirthCountryAD captures enum value "AD"
	ContactContactBirthCountryAD string = "AD"
	// ContactContactBirthCountryAE captures enum value "AE"
	ContactContactBirthCountryAE string = "AE"
	// ContactContactBirthCountryAF captures enum value "AF"
	ContactContactBirthCountryAF string = "AF"
	// ContactContactBirthCountryAG captures enum value "AG"
	ContactContactBirthCountryAG string = "AG"
	// ContactContactBirthCountryAI captures enum value "AI"
	ContactContactBirthCountryAI string = "AI"
	// ContactContactBirthCountryAL captures enum value "AL"
	ContactContactBirthCountryAL string = "AL"
	// ContactContactBirthCountryAM captures enum value "AM"
	ContactContactBirthCountryAM string = "AM"
	// ContactContactBirthCountryAO captures enum value "AO"
	ContactContactBirthCountryAO string = "AO"
	// ContactContactBirthCountryAQ captures enum value "AQ"
	ContactContactBirthCountryAQ string = "AQ"
	// ContactContactBirthCountryAR captures enum value "AR"
	ContactContactBirthCountryAR string = "AR"
	// ContactContactBirthCountryAS captures enum value "AS"
	ContactContactBirthCountryAS string = "AS"
	// ContactContactBirthCountryAT captures enum value "AT"
	ContactContactBirthCountryAT string = "AT"
	// ContactContactBirthCountryAU captures enum value "AU"
	ContactContactBirthCountryAU string = "AU"
	// ContactContactBirthCountryAW captures enum value "AW"
	ContactContactBirthCountryAW string = "AW"
	// ContactContactBirthCountryAX captures enum value "AX"
	ContactContactBirthCountryAX string = "AX"
	// ContactContactBirthCountryAZ captures enum value "AZ"
	ContactContactBirthCountryAZ string = "AZ"
	// ContactContactBirthCountryBA captures enum value "BA"
	ContactContactBirthCountryBA string = "BA"
	// ContactContactBirthCountryBB captures enum value "BB"
	ContactContactBirthCountryBB string = "BB"
	// ContactContactBirthCountryBD captures enum value "BD"
	ContactContactBirthCountryBD string = "BD"
	// ContactContactBirthCountryBE captures enum value "BE"
	ContactContactBirthCountryBE string = "BE"
	// ContactContactBirthCountryBF captures enum value "BF"
	ContactContactBirthCountryBF string = "BF"
	// ContactContactBirthCountryBG captures enum value "BG"
	ContactContactBirthCountryBG string = "BG"
	// ContactContactBirthCountryBH captures enum value "BH"
	ContactContactBirthCountryBH string = "BH"
	// ContactContactBirthCountryBI captures enum value "BI"
	ContactContactBirthCountryBI string = "BI"
	// ContactContactBirthCountryBJ captures enum value "BJ"
	ContactContactBirthCountryBJ string = "BJ"
	// ContactContactBirthCountryBL captures enum value "BL"
	ContactContactBirthCountryBL string = "BL"
	// ContactContactBirthCountryBM captures enum value "BM"
	ContactContactBirthCountryBM string = "BM"
	// ContactContactBirthCountryBN captures enum value "BN"
	ContactContactBirthCountryBN string = "BN"
	// ContactContactBirthCountryBO captures enum value "BO"
	ContactContactBirthCountryBO string = "BO"
	// ContactContactBirthCountryBQ captures enum value "BQ"
	ContactContactBirthCountryBQ string = "BQ"
	// ContactContactBirthCountryBR captures enum value "BR"
	ContactContactBirthCountryBR string = "BR"
	// ContactContactBirthCountryBS captures enum value "BS"
	ContactContactBirthCountryBS string = "BS"
	// ContactContactBirthCountryBT captures enum value "BT"
	ContactContactBirthCountryBT string = "BT"
	// ContactContactBirthCountryBW captures enum value "BW"
	ContactContactBirthCountryBW string = "BW"
	// ContactContactBirthCountryBY captures enum value "BY"
	ContactContactBirthCountryBY string = "BY"
	// ContactContactBirthCountryBZ captures enum value "BZ"
	ContactContactBirthCountryBZ string = "BZ"
	// ContactContactBirthCountryCA captures enum value "CA"
	ContactContactBirthCountryCA string = "CA"
	// ContactContactBirthCountryCC captures enum value "CC"
	ContactContactBirthCountryCC string = "CC"
	// ContactContactBirthCountryCD captures enum value "CD"
	ContactContactBirthCountryCD string = "CD"
	// ContactContactBirthCountryCF captures enum value "CF"
	ContactContactBirthCountryCF string = "CF"
	// ContactContactBirthCountryCG captures enum value "CG"
	ContactContactBirthCountryCG string = "CG"
	// ContactContactBirthCountryCH captures enum value "CH"
	ContactContactBirthCountryCH string = "CH"
	// ContactContactBirthCountryCI captures enum value "CI"
	ContactContactBirthCountryCI string = "CI"
	// ContactContactBirthCountryCK captures enum value "CK"
	ContactContactBirthCountryCK string = "CK"
	// ContactContactBirthCountryCL captures enum value "CL"
	ContactContactBirthCountryCL string = "CL"
	// ContactContactBirthCountryCM captures enum value "CM"
	ContactContactBirthCountryCM string = "CM"
	// ContactContactBirthCountryCN captures enum value "CN"
	ContactContactBirthCountryCN string = "CN"
	// ContactContactBirthCountryCO captures enum value "CO"
	ContactContactBirthCountryCO string = "CO"
	// ContactContactBirthCountryCR captures enum value "CR"
	ContactContactBirthCountryCR string = "CR"
	// ContactContactBirthCountryCU captures enum value "CU"
	ContactContactBirthCountryCU string = "CU"
	// ContactContactBirthCountryCV captures enum value "CV"
	ContactContactBirthCountryCV string = "CV"
	// ContactContactBirthCountryCW captures enum value "CW"
	ContactContactBirthCountryCW string = "CW"
	// ContactContactBirthCountryCX captures enum value "CX"
	ContactContactBirthCountryCX string = "CX"
	// ContactContactBirthCountryCY captures enum value "CY"
	ContactContactBirthCountryCY string = "CY"
	// ContactContactBirthCountryCZ captures enum value "CZ"
	ContactContactBirthCountryCZ string = "CZ"
	// ContactContactBirthCountryDE captures enum value "DE"
	ContactContactBirthCountryDE string = "DE"
	// ContactContactBirthCountryDG captures enum value "DG"
	ContactContactBirthCountryDG string = "DG"
	// ContactContactBirthCountryDJ captures enum value "DJ"
	ContactContactBirthCountryDJ string = "DJ"
	// ContactContactBirthCountryDK captures enum value "DK"
	ContactContactBirthCountryDK string = "DK"
	// ContactContactBirthCountryDM captures enum value "DM"
	ContactContactBirthCountryDM string = "DM"
	// ContactContactBirthCountryDO captures enum value "DO"
	ContactContactBirthCountryDO string = "DO"
	// ContactContactBirthCountryDZ captures enum value "DZ"
	ContactContactBirthCountryDZ string = "DZ"
	// ContactContactBirthCountryEA captures enum value "EA"
	ContactContactBirthCountryEA string = "EA"
	// ContactContactBirthCountryEC captures enum value "EC"
	ContactContactBirthCountryEC string = "EC"
	// ContactContactBirthCountryEE captures enum value "EE"
	ContactContactBirthCountryEE string = "EE"
	// ContactContactBirthCountryEG captures enum value "EG"
	ContactContactBirthCountryEG string = "EG"
	// ContactContactBirthCountryEH captures enum value "EH"
	ContactContactBirthCountryEH string = "EH"
	// ContactContactBirthCountryER captures enum value "ER"
	ContactContactBirthCountryER string = "ER"
	// ContactContactBirthCountryES captures enum value "ES"
	ContactContactBirthCountryES string = "ES"
	// ContactContactBirthCountryET captures enum value "ET"
	ContactContactBirthCountryET string = "ET"
	// ContactContactBirthCountryFI captures enum value "FI"
	ContactContactBirthCountryFI string = "FI"
	// ContactContactBirthCountryFJ captures enum value "FJ"
	ContactContactBirthCountryFJ string = "FJ"
	// ContactContactBirthCountryFK captures enum value "FK"
	ContactContactBirthCountryFK string = "FK"
	// ContactContactBirthCountryFM captures enum value "FM"
	ContactContactBirthCountryFM string = "FM"
	// ContactContactBirthCountryFO captures enum value "FO"
	ContactContactBirthCountryFO string = "FO"
	// ContactContactBirthCountryFR captures enum value "FR"
	ContactContactBirthCountryFR string = "FR"
	// ContactContactBirthCountryGA captures enum value "GA"
	ContactContactBirthCountryGA string = "GA"
	// ContactContactBirthCountryGB captures enum value "GB"
	ContactContactBirthCountryGB string = "GB"
	// ContactContactBirthCountryGD captures enum value "GD"
	ContactContactBirthCountryGD string = "GD"
	// ContactContactBirthCountryGE captures enum value "GE"
	ContactContactBirthCountryGE string = "GE"
	// ContactContactBirthCountryGF captures enum value "GF"
	ContactContactBirthCountryGF string = "GF"
	// ContactContactBirthCountryGG captures enum value "GG"
	ContactContactBirthCountryGG string = "GG"
	// ContactContactBirthCountryGH captures enum value "GH"
	ContactContactBirthCountryGH string = "GH"
	// ContactContactBirthCountryGI captures enum value "GI"
	ContactContactBirthCountryGI string = "GI"
	// ContactContactBirthCountryGL captures enum value "GL"
	ContactContactBirthCountryGL string = "GL"
	// ContactContactBirthCountryGM captures enum value "GM"
	ContactContactBirthCountryGM string = "GM"
	// ContactContactBirthCountryGN captures enum value "GN"
	ContactContactBirthCountryGN string = "GN"
	// ContactContactBirthCountryGP captures enum value "GP"
	ContactContactBirthCountryGP string = "GP"
	// ContactContactBirthCountryGQ captures enum value "GQ"
	ContactContactBirthCountryGQ string = "GQ"
	// ContactContactBirthCountryGR captures enum value "GR"
	ContactContactBirthCountryGR string = "GR"
	// ContactContactBirthCountryGS captures enum value "GS"
	ContactContactBirthCountryGS string = "GS"
	// ContactContactBirthCountryGT captures enum value "GT"
	ContactContactBirthCountryGT string = "GT"
	// ContactContactBirthCountryGU captures enum value "GU"
	ContactContactBirthCountryGU string = "GU"
	// ContactContactBirthCountryGW captures enum value "GW"
	ContactContactBirthCountryGW string = "GW"
	// ContactContactBirthCountryGY captures enum value "GY"
	ContactContactBirthCountryGY string = "GY"
	// ContactContactBirthCountryHK captures enum value "HK"
	ContactContactBirthCountryHK string = "HK"
	// ContactContactBirthCountryHN captures enum value "HN"
	ContactContactBirthCountryHN string = "HN"
	// ContactContactBirthCountryHR captures enum value "HR"
	ContactContactBirthCountryHR string = "HR"
	// ContactContactBirthCountryHT captures enum value "HT"
	ContactContactBirthCountryHT string = "HT"
	// ContactContactBirthCountryHU captures enum value "HU"
	ContactContactBirthCountryHU string = "HU"
	// ContactContactBirthCountryIC captures enum value "IC"
	ContactContactBirthCountryIC string = "IC"
	// ContactContactBirthCountryID captures enum value "ID"
	ContactContactBirthCountryID string = "ID"
	// ContactContactBirthCountryIE captures enum value "IE"
	ContactContactBirthCountryIE string = "IE"
	// ContactContactBirthCountryIL captures enum value "IL"
	ContactContactBirthCountryIL string = "IL"
	// ContactContactBirthCountryIM captures enum value "IM"
	ContactContactBirthCountryIM string = "IM"
	// ContactContactBirthCountryIN captures enum value "IN"
	ContactContactBirthCountryIN string = "IN"
	// ContactContactBirthCountryIO captures enum value "IO"
	ContactContactBirthCountryIO string = "IO"
	// ContactContactBirthCountryIQ captures enum value "IQ"
	ContactContactBirthCountryIQ string = "IQ"
	// ContactContactBirthCountryIR captures enum value "IR"
	ContactContactBirthCountryIR string = "IR"
	// ContactContactBirthCountryIS captures enum value "IS"
	ContactContactBirthCountryIS string = "IS"
	// ContactContactBirthCountryIT captures enum value "IT"
	ContactContactBirthCountryIT string = "IT"
	// ContactContactBirthCountryJE captures enum value "JE"
	ContactContactBirthCountryJE string = "JE"
	// ContactContactBirthCountryJM captures enum value "JM"
	ContactContactBirthCountryJM string = "JM"
	// ContactContactBirthCountryJO captures enum value "JO"
	ContactContactBirthCountryJO string = "JO"
	// ContactContactBirthCountryJP captures enum value "JP"
	ContactContactBirthCountryJP string = "JP"
	// ContactContactBirthCountryKE captures enum value "KE"
	ContactContactBirthCountryKE string = "KE"
	// ContactContactBirthCountryKG captures enum value "KG"
	ContactContactBirthCountryKG string = "KG"
	// ContactContactBirthCountryKH captures enum value "KH"
	ContactContactBirthCountryKH string = "KH"
	// ContactContactBirthCountryKI captures enum value "KI"
	ContactContactBirthCountryKI string = "KI"
	// ContactContactBirthCountryKM captures enum value "KM"
	ContactContactBirthCountryKM string = "KM"
	// ContactContactBirthCountryKN captures enum value "KN"
	ContactContactBirthCountryKN string = "KN"
	// ContactContactBirthCountryKP captures enum value "KP"
	ContactContactBirthCountryKP string = "KP"
	// ContactContactBirthCountryKR captures enum value "KR"
	ContactContactBirthCountryKR string = "KR"
	// ContactContactBirthCountryKW captures enum value "KW"
	ContactContactBirthCountryKW string = "KW"
	// ContactContactBirthCountryKY captures enum value "KY"
	ContactContactBirthCountryKY string = "KY"
	// ContactContactBirthCountryKZ captures enum value "KZ"
	ContactContactBirthCountryKZ string = "KZ"
	// ContactContactBirthCountryLA captures enum value "LA"
	ContactContactBirthCountryLA string = "LA"
	// ContactContactBirthCountryLB captures enum value "LB"
	ContactContactBirthCountryLB string = "LB"
	// ContactContactBirthCountryLC captures enum value "LC"
	ContactContactBirthCountryLC string = "LC"
	// ContactContactBirthCountryLI captures enum value "LI"
	ContactContactBirthCountryLI string = "LI"
	// ContactContactBirthCountryLK captures enum value "LK"
	ContactContactBirthCountryLK string = "LK"
	// ContactContactBirthCountryLR captures enum value "LR"
	ContactContactBirthCountryLR string = "LR"
	// ContactContactBirthCountryLS captures enum value "LS"
	ContactContactBirthCountryLS string = "LS"
	// ContactContactBirthCountryLT captures enum value "LT"
	ContactContactBirthCountryLT string = "LT"
	// ContactContactBirthCountryLU captures enum value "LU"
	ContactContactBirthCountryLU string = "LU"
	// ContactContactBirthCountryLV captures enum value "LV"
	ContactContactBirthCountryLV string = "LV"
	// ContactContactBirthCountryLY captures enum value "LY"
	ContactContactBirthCountryLY string = "LY"
	// ContactContactBirthCountryMA captures enum value "MA"
	ContactContactBirthCountryMA string = "MA"
	// ContactContactBirthCountryMC captures enum value "MC"
	ContactContactBirthCountryMC string = "MC"
	// ContactContactBirthCountryMD captures enum value "MD"
	ContactContactBirthCountryMD string = "MD"
	// ContactContactBirthCountryME captures enum value "ME"
	ContactContactBirthCountryME string = "ME"
	// ContactContactBirthCountryMF captures enum value "MF"
	ContactContactBirthCountryMF string = "MF"
	// ContactContactBirthCountryMG captures enum value "MG"
	ContactContactBirthCountryMG string = "MG"
	// ContactContactBirthCountryMH captures enum value "MH"
	ContactContactBirthCountryMH string = "MH"
	// ContactContactBirthCountryMK captures enum value "MK"
	ContactContactBirthCountryMK string = "MK"
	// ContactContactBirthCountryML captures enum value "ML"
	ContactContactBirthCountryML string = "ML"
	// ContactContactBirthCountryMM captures enum value "MM"
	ContactContactBirthCountryMM string = "MM"
	// ContactContactBirthCountryMN captures enum value "MN"
	ContactContactBirthCountryMN string = "MN"
	// ContactContactBirthCountryMO captures enum value "MO"
	ContactContactBirthCountryMO string = "MO"
	// ContactContactBirthCountryMP captures enum value "MP"
	ContactContactBirthCountryMP string = "MP"
	// ContactContactBirthCountryMQ captures enum value "MQ"
	ContactContactBirthCountryMQ string = "MQ"
	// ContactContactBirthCountryMR captures enum value "MR"
	ContactContactBirthCountryMR string = "MR"
	// ContactContactBirthCountryMS captures enum value "MS"
	ContactContactBirthCountryMS string = "MS"
	// ContactContactBirthCountryMT captures enum value "MT"
	ContactContactBirthCountryMT string = "MT"
	// ContactContactBirthCountryMU captures enum value "MU"
	ContactContactBirthCountryMU string = "MU"
	// ContactContactBirthCountryMV captures enum value "MV"
	ContactContactBirthCountryMV string = "MV"
	// ContactContactBirthCountryMW captures enum value "MW"
	ContactContactBirthCountryMW string = "MW"
	// ContactContactBirthCountryMX captures enum value "MX"
	ContactContactBirthCountryMX string = "MX"
	// ContactContactBirthCountryMY captures enum value "MY"
	ContactContactBirthCountryMY string = "MY"
	// ContactContactBirthCountryMZ captures enum value "MZ"
	ContactContactBirthCountryMZ string = "MZ"
	// ContactContactBirthCountryNA captures enum value "NA"
	ContactContactBirthCountryNA string = "NA"
	// ContactContactBirthCountryNC captures enum value "NC"
	ContactContactBirthCountryNC string = "NC"
	// ContactContactBirthCountryNE captures enum value "NE"
	ContactContactBirthCountryNE string = "NE"
	// ContactContactBirthCountryNF captures enum value "NF"
	ContactContactBirthCountryNF string = "NF"
	// ContactContactBirthCountryNG captures enum value "NG"
	ContactContactBirthCountryNG string = "NG"
	// ContactContactBirthCountryNI captures enum value "NI"
	ContactContactBirthCountryNI string = "NI"
	// ContactContactBirthCountryNL captures enum value "NL"
	ContactContactBirthCountryNL string = "NL"
	// ContactContactBirthCountryNO captures enum value "NO"
	ContactContactBirthCountryNO string = "NO"
	// ContactContactBirthCountryNP captures enum value "NP"
	ContactContactBirthCountryNP string = "NP"
	// ContactContactBirthCountryNR captures enum value "NR"
	ContactContactBirthCountryNR string = "NR"
	// ContactContactBirthCountryNU captures enum value "NU"
	ContactContactBirthCountryNU string = "NU"
	// ContactContactBirthCountryNZ captures enum value "NZ"
	ContactContactBirthCountryNZ string = "NZ"
	// ContactContactBirthCountryOM captures enum value "OM"
	ContactContactBirthCountryOM string = "OM"
	// ContactContactBirthCountryPA captures enum value "PA"
	ContactContactBirthCountryPA string = "PA"
	// ContactContactBirthCountryPE captures enum value "PE"
	ContactContactBirthCountryPE string = "PE"
	// ContactContactBirthCountryPF captures enum value "PF"
	ContactContactBirthCountryPF string = "PF"
	// ContactContactBirthCountryPG captures enum value "PG"
	ContactContactBirthCountryPG string = "PG"
	// ContactContactBirthCountryPH captures enum value "PH"
	ContactContactBirthCountryPH string = "PH"
	// ContactContactBirthCountryPK captures enum value "PK"
	ContactContactBirthCountryPK string = "PK"
	// ContactContactBirthCountryPL captures enum value "PL"
	ContactContactBirthCountryPL string = "PL"
	// ContactContactBirthCountryPM captures enum value "PM"
	ContactContactBirthCountryPM string = "PM"
	// ContactContactBirthCountryPN captures enum value "PN"
	ContactContactBirthCountryPN string = "PN"
	// ContactContactBirthCountryPR captures enum value "PR"
	ContactContactBirthCountryPR string = "PR"
	// ContactContactBirthCountryPS captures enum value "PS"
	ContactContactBirthCountryPS string = "PS"
	// ContactContactBirthCountryPT captures enum value "PT"
	ContactContactBirthCountryPT string = "PT"
	// ContactContactBirthCountryPW captures enum value "PW"
	ContactContactBirthCountryPW string = "PW"
	// ContactContactBirthCountryPY captures enum value "PY"
	ContactContactBirthCountryPY string = "PY"
	// ContactContactBirthCountryQA captures enum value "QA"
	ContactContactBirthCountryQA string = "QA"
	// ContactContactBirthCountryRE captures enum value "RE"
	ContactContactBirthCountryRE string = "RE"
	// ContactContactBirthCountryRO captures enum value "RO"
	ContactContactBirthCountryRO string = "RO"
	// ContactContactBirthCountryRS captures enum value "RS"
	ContactContactBirthCountryRS string = "RS"
	// ContactContactBirthCountryRU captures enum value "RU"
	ContactContactBirthCountryRU string = "RU"
	// ContactContactBirthCountryRW captures enum value "RW"
	ContactContactBirthCountryRW string = "RW"
	// ContactContactBirthCountrySA captures enum value "SA"
	ContactContactBirthCountrySA string = "SA"
	// ContactContactBirthCountrySB captures enum value "SB"
	ContactContactBirthCountrySB string = "SB"
	// ContactContactBirthCountrySC captures enum value "SC"
	ContactContactBirthCountrySC string = "SC"
	// ContactContactBirthCountrySD captures enum value "SD"
	ContactContactBirthCountrySD string = "SD"
	// ContactContactBirthCountrySE captures enum value "SE"
	ContactContactBirthCountrySE string = "SE"
	// ContactContactBirthCountrySG captures enum value "SG"
	ContactContactBirthCountrySG string = "SG"
	// ContactContactBirthCountrySH captures enum value "SH"
	ContactContactBirthCountrySH string = "SH"
	// ContactContactBirthCountrySI captures enum value "SI"
	ContactContactBirthCountrySI string = "SI"
	// ContactContactBirthCountrySJ captures enum value "SJ"
	ContactContactBirthCountrySJ string = "SJ"
	// ContactContactBirthCountrySK captures enum value "SK"
	ContactContactBirthCountrySK string = "SK"
	// ContactContactBirthCountrySL captures enum value "SL"
	ContactContactBirthCountrySL string = "SL"
	// ContactContactBirthCountrySM captures enum value "SM"
	ContactContactBirthCountrySM string = "SM"
	// ContactContactBirthCountrySN captures enum value "SN"
	ContactContactBirthCountrySN string = "SN"
	// ContactContactBirthCountrySO captures enum value "SO"
	ContactContactBirthCountrySO string = "SO"
	// ContactContactBirthCountrySR captures enum value "SR"
	ContactContactBirthCountrySR string = "SR"
	// ContactContactBirthCountrySS captures enum value "SS"
	ContactContactBirthCountrySS string = "SS"
	// ContactContactBirthCountryST captures enum value "ST"
	ContactContactBirthCountryST string = "ST"
	// ContactContactBirthCountrySV captures enum value "SV"
	ContactContactBirthCountrySV string = "SV"
	// ContactContactBirthCountrySX captures enum value "SX"
	ContactContactBirthCountrySX string = "SX"
	// ContactContactBirthCountrySY captures enum value "SY"
	ContactContactBirthCountrySY string = "SY"
	// ContactContactBirthCountrySZ captures enum value "SZ"
	ContactContactBirthCountrySZ string = "SZ"
	// ContactContactBirthCountryTA captures enum value "TA"
	ContactContactBirthCountryTA string = "TA"
	// ContactContactBirthCountryTC captures enum value "TC"
	ContactContactBirthCountryTC string = "TC"
	// ContactContactBirthCountryTD captures enum value "TD"
	ContactContactBirthCountryTD string = "TD"
	// ContactContactBirthCountryTF captures enum value "TF"
	ContactContactBirthCountryTF string = "TF"
	// ContactContactBirthCountryTG captures enum value "TG"
	ContactContactBirthCountryTG string = "TG"
	// ContactContactBirthCountryTH captures enum value "TH"
	ContactContactBirthCountryTH string = "TH"
	// ContactContactBirthCountryTJ captures enum value "TJ"
	ContactContactBirthCountryTJ string = "TJ"
	// ContactContactBirthCountryTK captures enum value "TK"
	ContactContactBirthCountryTK string = "TK"
	// ContactContactBirthCountryTL captures enum value "TL"
	ContactContactBirthCountryTL string = "TL"
	// ContactContactBirthCountryTM captures enum value "TM"
	ContactContactBirthCountryTM string = "TM"
	// ContactContactBirthCountryTN captures enum value "TN"
	ContactContactBirthCountryTN string = "TN"
	// ContactContactBirthCountryTO captures enum value "TO"
	ContactContactBirthCountryTO string = "TO"
	// ContactContactBirthCountryTR captures enum value "TR"
	ContactContactBirthCountryTR string = "TR"
	// ContactContactBirthCountryTT captures enum value "TT"
	ContactContactBirthCountryTT string = "TT"
	// ContactContactBirthCountryTV captures enum value "TV"
	ContactContactBirthCountryTV string = "TV"
	// ContactContactBirthCountryTW captures enum value "TW"
	ContactContactBirthCountryTW string = "TW"
	// ContactContactBirthCountryTZ captures enum value "TZ"
	ContactContactBirthCountryTZ string = "TZ"
	// ContactContactBirthCountryUA captures enum value "UA"
	ContactContactBirthCountryUA string = "UA"
	// ContactContactBirthCountryUG captures enum value "UG"
	ContactContactBirthCountryUG string = "UG"
	// ContactContactBirthCountryUM captures enum value "UM"
	ContactContactBirthCountryUM string = "UM"
	// ContactContactBirthCountryUNKNOWN captures enum value "UNKNOWN"
	ContactContactBirthCountryUNKNOWN string = "UNKNOWN"
	// ContactContactBirthCountryUS captures enum value "US"
	ContactContactBirthCountryUS string = "US"
	// ContactContactBirthCountryUY captures enum value "UY"
	ContactContactBirthCountryUY string = "UY"
	// ContactContactBirthCountryUZ captures enum value "UZ"
	ContactContactBirthCountryUZ string = "UZ"
	// ContactContactBirthCountryVA captures enum value "VA"
	ContactContactBirthCountryVA string = "VA"
	// ContactContactBirthCountryVC captures enum value "VC"
	ContactContactBirthCountryVC string = "VC"
	// ContactContactBirthCountryVE captures enum value "VE"
	ContactContactBirthCountryVE string = "VE"
	// ContactContactBirthCountryVG captures enum value "VG"
	ContactContactBirthCountryVG string = "VG"
	// ContactContactBirthCountryVI captures enum value "VI"
	ContactContactBirthCountryVI string = "VI"
	// ContactContactBirthCountryVN captures enum value "VN"
	ContactContactBirthCountryVN string = "VN"
	// ContactContactBirthCountryVU captures enum value "VU"
	ContactContactBirthCountryVU string = "VU"
	// ContactContactBirthCountryWF captures enum value "WF"
	ContactContactBirthCountryWF string = "WF"
	// ContactContactBirthCountryWS captures enum value "WS"
	ContactContactBirthCountryWS string = "WS"
	// ContactContactBirthCountryXK captures enum value "XK"
	ContactContactBirthCountryXK string = "XK"
	// ContactContactBirthCountryYE captures enum value "YE"
	ContactContactBirthCountryYE string = "YE"
	// ContactContactBirthCountryYT captures enum value "YT"
	ContactContactBirthCountryYT string = "YT"
	// ContactContactBirthCountryZA captures enum value "ZA"
	ContactContactBirthCountryZA string = "ZA"
	// ContactContactBirthCountryZM captures enum value "ZM"
	ContactContactBirthCountryZM string = "ZM"
	// ContactContactBirthCountryZW captures enum value "ZW"
	ContactContactBirthCountryZW string = "ZW"
)

// prop value enum
func (m *ContactContact) validateBirthCountryEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contactContactTypeBirthCountryPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContactContact) validateBirthCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.BirthCountry) { // not required
		return nil
	}

	// value enum
	if err := m.validateBirthCountryEnum("birthCountry", "body", m.BirthCountry); err != nil {
		return err
	}

	return nil
}

var contactContactTypeGenderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["female","male"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactContactTypeGenderPropEnum = append(contactContactTypeGenderPropEnum, v)
	}
}

const (
	// ContactContactGenderFemale captures enum value "female"
	ContactContactGenderFemale string = "female"
	// ContactContactGenderMale captures enum value "male"
	ContactContactGenderMale string = "male"
)

// prop value enum
func (m *ContactContact) validateGenderEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contactContactTypeGenderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContactContact) validateGender(formats strfmt.Registry) error {

	if swag.IsZero(m.Gender) { // not required
		return nil
	}

	// value enum
	if err := m.validateGenderEnum("gender", "body", m.Gender); err != nil {
		return err
	}

	return nil
}

func (m *ContactContact) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", int64(m.ID)); err != nil {
		return err
	}

	return nil
}

var contactContactTypeLanguagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cs_CZ","de_DE","en_AU","en_CA","en_GB","en_IE","en_US","es_ES","fi_FI","fr_CA","fr_FR","fr_MA","fr_SN","fr_TN","it_IT","lt_LT","nl_NL","pl_PL","pt_PT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactContactTypeLanguagePropEnum = append(contactContactTypeLanguagePropEnum, v)
	}
}

const (
	// ContactContactLanguageCsCZ captures enum value "cs_CZ"
	ContactContactLanguageCsCZ string = "cs_CZ"
	// ContactContactLanguageDeDE captures enum value "de_DE"
	ContactContactLanguageDeDE string = "de_DE"
	// ContactContactLanguageEnAU captures enum value "en_AU"
	ContactContactLanguageEnAU string = "en_AU"
	// ContactContactLanguageEnCA captures enum value "en_CA"
	ContactContactLanguageEnCA string = "en_CA"
	// ContactContactLanguageEnGB captures enum value "en_GB"
	ContactContactLanguageEnGB string = "en_GB"
	// ContactContactLanguageEnIE captures enum value "en_IE"
	ContactContactLanguageEnIE string = "en_IE"
	// ContactContactLanguageEnUS captures enum value "en_US"
	ContactContactLanguageEnUS string = "en_US"
	// ContactContactLanguageEsES captures enum value "es_ES"
	ContactContactLanguageEsES string = "es_ES"
	// ContactContactLanguageFiFI captures enum value "fi_FI"
	ContactContactLanguageFiFI string = "fi_FI"
	// ContactContactLanguageFrCA captures enum value "fr_CA"
	ContactContactLanguageFrCA string = "fr_CA"
	// ContactContactLanguageFrFR captures enum value "fr_FR"
	ContactContactLanguageFrFR string = "fr_FR"
	// ContactContactLanguageFrMA captures enum value "fr_MA"
	ContactContactLanguageFrMA string = "fr_MA"
	// ContactContactLanguageFrSN captures enum value "fr_SN"
	ContactContactLanguageFrSN string = "fr_SN"
	// ContactContactLanguageFrTN captures enum value "fr_TN"
	ContactContactLanguageFrTN string = "fr_TN"
	// ContactContactLanguageItIT captures enum value "it_IT"
	ContactContactLanguageItIT string = "it_IT"
	// ContactContactLanguageLtLT captures enum value "lt_LT"
	ContactContactLanguageLtLT string = "lt_LT"
	// ContactContactLanguageNlNL captures enum value "nl_NL"
	ContactContactLanguageNlNL string = "nl_NL"
	// ContactContactLanguagePlPL captures enum value "pl_PL"
	ContactContactLanguagePlPL string = "pl_PL"
	// ContactContactLanguagePtPT captures enum value "pt_PT"
	ContactContactLanguagePtPT string = "pt_PT"
)

// prop value enum
func (m *ContactContact) validateLanguageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contactContactTypeLanguagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContactContact) validateLanguage(formats strfmt.Registry) error {

	if swag.IsZero(m.Language) { // not required
		return nil
	}

	// value enum
	if err := m.validateLanguageEnum("language", "body", m.Language); err != nil {
		return err
	}

	return nil
}

var contactContactTypeLegalFormPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["administration","association","corporation","individual","other","personalcorporation"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactContactTypeLegalFormPropEnum = append(contactContactTypeLegalFormPropEnum, v)
	}
}

const (
	// ContactContactLegalFormAdministration captures enum value "administration"
	ContactContactLegalFormAdministration string = "administration"
	// ContactContactLegalFormAssociation captures enum value "association"
	ContactContactLegalFormAssociation string = "association"
	// ContactContactLegalFormCorporation captures enum value "corporation"
	ContactContactLegalFormCorporation string = "corporation"
	// ContactContactLegalFormIndividual captures enum value "individual"
	ContactContactLegalFormIndividual string = "individual"
	// ContactContactLegalFormOther captures enum value "other"
	ContactContactLegalFormOther string = "other"
	// ContactContactLegalFormPersonalcorporation captures enum value "personalcorporation"
	ContactContactLegalFormPersonalcorporation string = "personalcorporation"
)

// prop value enum
func (m *ContactContact) validateLegalFormEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contactContactTypeLegalFormPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContactContact) validateLegalForm(formats strfmt.Registry) error {

	if swag.IsZero(m.LegalForm) { // not required
		return nil
	}

	// value enum
	if err := m.validateLegalFormEnum("legalForm", "body", m.LegalForm); err != nil {
		return err
	}

	return nil
}

var contactContactTypeNationalityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AC","AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DG","DJ","DK","DM","DO","DZ","EA","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HN","HR","HT","HU","IC","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","UNKNOWN","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contactContactTypeNationalityPropEnum = append(contactContactTypeNationalityPropEnum, v)
	}
}

const (
	// ContactContactNationalityAC captures enum value "AC"
	ContactContactNationalityAC string = "AC"
	// ContactContactNationalityAD captures enum value "AD"
	ContactContactNationalityAD string = "AD"
	// ContactContactNationalityAE captures enum value "AE"
	ContactContactNationalityAE string = "AE"
	// ContactContactNationalityAF captures enum value "AF"
	ContactContactNationalityAF string = "AF"
	// ContactContactNationalityAG captures enum value "AG"
	ContactContactNationalityAG string = "AG"
	// ContactContactNationalityAI captures enum value "AI"
	ContactContactNationalityAI string = "AI"
	// ContactContactNationalityAL captures enum value "AL"
	ContactContactNationalityAL string = "AL"
	// ContactContactNationalityAM captures enum value "AM"
	ContactContactNationalityAM string = "AM"
	// ContactContactNationalityAO captures enum value "AO"
	ContactContactNationalityAO string = "AO"
	// ContactContactNationalityAQ captures enum value "AQ"
	ContactContactNationalityAQ string = "AQ"
	// ContactContactNationalityAR captures enum value "AR"
	ContactContactNationalityAR string = "AR"
	// ContactContactNationalityAS captures enum value "AS"
	ContactContactNationalityAS string = "AS"
	// ContactContactNationalityAT captures enum value "AT"
	ContactContactNationalityAT string = "AT"
	// ContactContactNationalityAU captures enum value "AU"
	ContactContactNationalityAU string = "AU"
	// ContactContactNationalityAW captures enum value "AW"
	ContactContactNationalityAW string = "AW"
	// ContactContactNationalityAX captures enum value "AX"
	ContactContactNationalityAX string = "AX"
	// ContactContactNationalityAZ captures enum value "AZ"
	ContactContactNationalityAZ string = "AZ"
	// ContactContactNationalityBA captures enum value "BA"
	ContactContactNationalityBA string = "BA"
	// ContactContactNationalityBB captures enum value "BB"
	ContactContactNationalityBB string = "BB"
	// ContactContactNationalityBD captures enum value "BD"
	ContactContactNationalityBD string = "BD"
	// ContactContactNationalityBE captures enum value "BE"
	ContactContactNationalityBE string = "BE"
	// ContactContactNationalityBF captures enum value "BF"
	ContactContactNationalityBF string = "BF"
	// ContactContactNationalityBG captures enum value "BG"
	ContactContactNationalityBG string = "BG"
	// ContactContactNationalityBH captures enum value "BH"
	ContactContactNationalityBH string = "BH"
	// ContactContactNationalityBI captures enum value "BI"
	ContactContactNationalityBI string = "BI"
	// ContactContactNationalityBJ captures enum value "BJ"
	ContactContactNationalityBJ string = "BJ"
	// ContactContactNationalityBL captures enum value "BL"
	ContactContactNationalityBL string = "BL"
	// ContactContactNationalityBM captures enum value "BM"
	ContactContactNationalityBM string = "BM"
	// ContactContactNationalityBN captures enum value "BN"
	ContactContactNationalityBN string = "BN"
	// ContactContactNationalityBO captures enum value "BO"
	ContactContactNationalityBO string = "BO"
	// ContactContactNationalityBQ captures enum value "BQ"
	ContactContactNationalityBQ string = "BQ"
	// ContactContactNationalityBR captures enum value "BR"
	ContactContactNationalityBR string = "BR"
	// ContactContactNationalityBS captures enum value "BS"
	ContactContactNationalityBS string = "BS"
	// ContactContactNationalityBT captures enum value "BT"
	ContactContactNationalityBT string = "BT"
	// ContactContactNationalityBW captures enum value "BW"
	ContactContactNationalityBW string = "BW"
	// ContactContactNationalityBY captures enum value "BY"
	ContactContactNationalityBY string = "BY"
	// ContactContactNationalityBZ captures enum value "BZ"
	ContactContactNationalityBZ string = "BZ"
	// ContactContactNationalityCA captures enum value "CA"
	ContactContactNationalityCA string = "CA"
	// ContactContactNationalityCC captures enum value "CC"
	ContactContactNationalityCC string = "CC"
	// ContactContactNationalityCD captures enum value "CD"
	ContactContactNationalityCD string = "CD"
	// ContactContactNationalityCF captures enum value "CF"
	ContactContactNationalityCF string = "CF"
	// ContactContactNationalityCG captures enum value "CG"
	ContactContactNationalityCG string = "CG"
	// ContactContactNationalityCH captures enum value "CH"
	ContactContactNationalityCH string = "CH"
	// ContactContactNationalityCI captures enum value "CI"
	ContactContactNationalityCI string = "CI"
	// ContactContactNationalityCK captures enum value "CK"
	ContactContactNationalityCK string = "CK"
	// ContactContactNationalityCL captures enum value "CL"
	ContactContactNationalityCL string = "CL"
	// ContactContactNationalityCM captures enum value "CM"
	ContactContactNationalityCM string = "CM"
	// ContactContactNationalityCN captures enum value "CN"
	ContactContactNationalityCN string = "CN"
	// ContactContactNationalityCO captures enum value "CO"
	ContactContactNationalityCO string = "CO"
	// ContactContactNationalityCR captures enum value "CR"
	ContactContactNationalityCR string = "CR"
	// ContactContactNationalityCU captures enum value "CU"
	ContactContactNationalityCU string = "CU"
	// ContactContactNationalityCV captures enum value "CV"
	ContactContactNationalityCV string = "CV"
	// ContactContactNationalityCW captures enum value "CW"
	ContactContactNationalityCW string = "CW"
	// ContactContactNationalityCX captures enum value "CX"
	ContactContactNationalityCX string = "CX"
	// ContactContactNationalityCY captures enum value "CY"
	ContactContactNationalityCY string = "CY"
	// ContactContactNationalityCZ captures enum value "CZ"
	ContactContactNationalityCZ string = "CZ"
	// ContactContactNationalityDE captures enum value "DE"
	ContactContactNationalityDE string = "DE"
	// ContactContactNationalityDG captures enum value "DG"
	ContactContactNationalityDG string = "DG"
	// ContactContactNationalityDJ captures enum value "DJ"
	ContactContactNationalityDJ string = "DJ"
	// ContactContactNationalityDK captures enum value "DK"
	ContactContactNationalityDK string = "DK"
	// ContactContactNationalityDM captures enum value "DM"
	ContactContactNationalityDM string = "DM"
	// ContactContactNationalityDO captures enum value "DO"
	ContactContactNationalityDO string = "DO"
	// ContactContactNationalityDZ captures enum value "DZ"
	ContactContactNationalityDZ string = "DZ"
	// ContactContactNationalityEA captures enum value "EA"
	ContactContactNationalityEA string = "EA"
	// ContactContactNationalityEC captures enum value "EC"
	ContactContactNationalityEC string = "EC"
	// ContactContactNationalityEE captures enum value "EE"
	ContactContactNationalityEE string = "EE"
	// ContactContactNationalityEG captures enum value "EG"
	ContactContactNationalityEG string = "EG"
	// ContactContactNationalityEH captures enum value "EH"
	ContactContactNationalityEH string = "EH"
	// ContactContactNationalityER captures enum value "ER"
	ContactContactNationalityER string = "ER"
	// ContactContactNationalityES captures enum value "ES"
	ContactContactNationalityES string = "ES"
	// ContactContactNationalityET captures enum value "ET"
	ContactContactNationalityET string = "ET"
	// ContactContactNationalityFI captures enum value "FI"
	ContactContactNationalityFI string = "FI"
	// ContactContactNationalityFJ captures enum value "FJ"
	ContactContactNationalityFJ string = "FJ"
	// ContactContactNationalityFK captures enum value "FK"
	ContactContactNationalityFK string = "FK"
	// ContactContactNationalityFM captures enum value "FM"
	ContactContactNationalityFM string = "FM"
	// ContactContactNationalityFO captures enum value "FO"
	ContactContactNationalityFO string = "FO"
	// ContactContactNationalityFR captures enum value "FR"
	ContactContactNationalityFR string = "FR"
	// ContactContactNationalityGA captures enum value "GA"
	ContactContactNationalityGA string = "GA"
	// ContactContactNationalityGB captures enum value "GB"
	ContactContactNationalityGB string = "GB"
	// ContactContactNationalityGD captures enum value "GD"
	ContactContactNationalityGD string = "GD"
	// ContactContactNationalityGE captures enum value "GE"
	ContactContactNationalityGE string = "GE"
	// ContactContactNationalityGF captures enum value "GF"
	ContactContactNationalityGF string = "GF"
	// ContactContactNationalityGG captures enum value "GG"
	ContactContactNationalityGG string = "GG"
	// ContactContactNationalityGH captures enum value "GH"
	ContactContactNationalityGH string = "GH"
	// ContactContactNationalityGI captures enum value "GI"
	ContactContactNationalityGI string = "GI"
	// ContactContactNationalityGL captures enum value "GL"
	ContactContactNationalityGL string = "GL"
	// ContactContactNationalityGM captures enum value "GM"
	ContactContactNationalityGM string = "GM"
	// ContactContactNationalityGN captures enum value "GN"
	ContactContactNationalityGN string = "GN"
	// ContactContactNationalityGP captures enum value "GP"
	ContactContactNationalityGP string = "GP"
	// ContactContactNationalityGQ captures enum value "GQ"
	ContactContactNationalityGQ string = "GQ"
	// ContactContactNationalityGR captures enum value "GR"
	ContactContactNationalityGR string = "GR"
	// ContactContactNationalityGS captures enum value "GS"
	ContactContactNationalityGS string = "GS"
	// ContactContactNationalityGT captures enum value "GT"
	ContactContactNationalityGT string = "GT"
	// ContactContactNationalityGU captures enum value "GU"
	ContactContactNationalityGU string = "GU"
	// ContactContactNationalityGW captures enum value "GW"
	ContactContactNationalityGW string = "GW"
	// ContactContactNationalityGY captures enum value "GY"
	ContactContactNationalityGY string = "GY"
	// ContactContactNationalityHK captures enum value "HK"
	ContactContactNationalityHK string = "HK"
	// ContactContactNationalityHN captures enum value "HN"
	ContactContactNationalityHN string = "HN"
	// ContactContactNationalityHR captures enum value "HR"
	ContactContactNationalityHR string = "HR"
	// ContactContactNationalityHT captures enum value "HT"
	ContactContactNationalityHT string = "HT"
	// ContactContactNationalityHU captures enum value "HU"
	ContactContactNationalityHU string = "HU"
	// ContactContactNationalityIC captures enum value "IC"
	ContactContactNationalityIC string = "IC"
	// ContactContactNationalityID captures enum value "ID"
	ContactContactNationalityID string = "ID"
	// ContactContactNationalityIE captures enum value "IE"
	ContactContactNationalityIE string = "IE"
	// ContactContactNationalityIL captures enum value "IL"
	ContactContactNationalityIL string = "IL"
	// ContactContactNationalityIM captures enum value "IM"
	ContactContactNationalityIM string = "IM"
	// ContactContactNationalityIN captures enum value "IN"
	ContactContactNationalityIN string = "IN"
	// ContactContactNationalityIO captures enum value "IO"
	ContactContactNationalityIO string = "IO"
	// ContactContactNationalityIQ captures enum value "IQ"
	ContactContactNationalityIQ string = "IQ"
	// ContactContactNationalityIR captures enum value "IR"
	ContactContactNationalityIR string = "IR"
	// ContactContactNationalityIS captures enum value "IS"
	ContactContactNationalityIS string = "IS"
	// ContactContactNationalityIT captures enum value "IT"
	ContactContactNationalityIT string = "IT"
	// ContactContactNationalityJE captures enum value "JE"
	ContactContactNationalityJE string = "JE"
	// ContactContactNationalityJM captures enum value "JM"
	ContactContactNationalityJM string = "JM"
	// ContactContactNationalityJO captures enum value "JO"
	ContactContactNationalityJO string = "JO"
	// ContactContactNationalityJP captures enum value "JP"
	ContactContactNationalityJP string = "JP"
	// ContactContactNationalityKE captures enum value "KE"
	ContactContactNationalityKE string = "KE"
	// ContactContactNationalityKG captures enum value "KG"
	ContactContactNationalityKG string = "KG"
	// ContactContactNationalityKH captures enum value "KH"
	ContactContactNationalityKH string = "KH"
	// ContactContactNationalityKI captures enum value "KI"
	ContactContactNationalityKI string = "KI"
	// ContactContactNationalityKM captures enum value "KM"
	ContactContactNationalityKM string = "KM"
	// ContactContactNationalityKN captures enum value "KN"
	ContactContactNationalityKN string = "KN"
	// ContactContactNationalityKP captures enum value "KP"
	ContactContactNationalityKP string = "KP"
	// ContactContactNationalityKR captures enum value "KR"
	ContactContactNationalityKR string = "KR"
	// ContactContactNationalityKW captures enum value "KW"
	ContactContactNationalityKW string = "KW"
	// ContactContactNationalityKY captures enum value "KY"
	ContactContactNationalityKY string = "KY"
	// ContactContactNationalityKZ captures enum value "KZ"
	ContactContactNationalityKZ string = "KZ"
	// ContactContactNationalityLA captures enum value "LA"
	ContactContactNationalityLA string = "LA"
	// ContactContactNationalityLB captures enum value "LB"
	ContactContactNationalityLB string = "LB"
	// ContactContactNationalityLC captures enum value "LC"
	ContactContactNationalityLC string = "LC"
	// ContactContactNationalityLI captures enum value "LI"
	ContactContactNationalityLI string = "LI"
	// ContactContactNationalityLK captures enum value "LK"
	ContactContactNationalityLK string = "LK"
	// ContactContactNationalityLR captures enum value "LR"
	ContactContactNationalityLR string = "LR"
	// ContactContactNationalityLS captures enum value "LS"
	ContactContactNationalityLS string = "LS"
	// ContactContactNationalityLT captures enum value "LT"
	ContactContactNationalityLT string = "LT"
	// ContactContactNationalityLU captures enum value "LU"
	ContactContactNationalityLU string = "LU"
	// ContactContactNationalityLV captures enum value "LV"
	ContactContactNationalityLV string = "LV"
	// ContactContactNationalityLY captures enum value "LY"
	ContactContactNationalityLY string = "LY"
	// ContactContactNationalityMA captures enum value "MA"
	ContactContactNationalityMA string = "MA"
	// ContactContactNationalityMC captures enum value "MC"
	ContactContactNationalityMC string = "MC"
	// ContactContactNationalityMD captures enum value "MD"
	ContactContactNationalityMD string = "MD"
	// ContactContactNationalityME captures enum value "ME"
	ContactContactNationalityME string = "ME"
	// ContactContactNationalityMF captures enum value "MF"
	ContactContactNationalityMF string = "MF"
	// ContactContactNationalityMG captures enum value "MG"
	ContactContactNationalityMG string = "MG"
	// ContactContactNationalityMH captures enum value "MH"
	ContactContactNationalityMH string = "MH"
	// ContactContactNationalityMK captures enum value "MK"
	ContactContactNationalityMK string = "MK"
	// ContactContactNationalityML captures enum value "ML"
	ContactContactNationalityML string = "ML"
	// ContactContactNationalityMM captures enum value "MM"
	ContactContactNationalityMM string = "MM"
	// ContactContactNationalityMN captures enum value "MN"
	ContactContactNationalityMN string = "MN"
	// ContactContactNationalityMO captures enum value "MO"
	ContactContactNationalityMO string = "MO"
	// ContactContactNationalityMP captures enum value "MP"
	ContactContactNationalityMP string = "MP"
	// ContactContactNationalityMQ captures enum value "MQ"
	ContactContactNationalityMQ string = "MQ"
	// ContactContactNationalityMR captures enum value "MR"
	ContactContactNationalityMR string = "MR"
	// ContactContactNationalityMS captures enum value "MS"
	ContactContactNationalityMS string = "MS"
	// ContactContactNationalityMT captures enum value "MT"
	ContactContactNationalityMT string = "MT"
	// ContactContactNationalityMU captures enum value "MU"
	ContactContactNationalityMU string = "MU"
	// ContactContactNationalityMV captures enum value "MV"
	ContactContactNationalityMV string = "MV"
	// ContactContactNationalityMW captures enum value "MW"
	ContactContactNationalityMW string = "MW"
	// ContactContactNationalityMX captures enum value "MX"
	ContactContactNationalityMX string = "MX"
	// ContactContactNationalityMY captures enum value "MY"
	ContactContactNationalityMY string = "MY"
	// ContactContactNationalityMZ captures enum value "MZ"
	ContactContactNationalityMZ string = "MZ"
	// ContactContactNationalityNA captures enum value "NA"
	ContactContactNationalityNA string = "NA"
	// ContactContactNationalityNC captures enum value "NC"
	ContactContactNationalityNC string = "NC"
	// ContactContactNationalityNE captures enum value "NE"
	ContactContactNationalityNE string = "NE"
	// ContactContactNationalityNF captures enum value "NF"
	ContactContactNationalityNF string = "NF"
	// ContactContactNationalityNG captures enum value "NG"
	ContactContactNationalityNG string = "NG"
	// ContactContactNationalityNI captures enum value "NI"
	ContactContactNationalityNI string = "NI"
	// ContactContactNationalityNL captures enum value "NL"
	ContactContactNationalityNL string = "NL"
	// ContactContactNationalityNO captures enum value "NO"
	ContactContactNationalityNO string = "NO"
	// ContactContactNationalityNP captures enum value "NP"
	ContactContactNationalityNP string = "NP"
	// ContactContactNationalityNR captures enum value "NR"
	ContactContactNationalityNR string = "NR"
	// ContactContactNationalityNU captures enum value "NU"
	ContactContactNationalityNU string = "NU"
	// ContactContactNationalityNZ captures enum value "NZ"
	ContactContactNationalityNZ string = "NZ"
	// ContactContactNationalityOM captures enum value "OM"
	ContactContactNationalityOM string = "OM"
	// ContactContactNationalityPA captures enum value "PA"
	ContactContactNationalityPA string = "PA"
	// ContactContactNationalityPE captures enum value "PE"
	ContactContactNationalityPE string = "PE"
	// ContactContactNationalityPF captures enum value "PF"
	ContactContactNationalityPF string = "PF"
	// ContactContactNationalityPG captures enum value "PG"
	ContactContactNationalityPG string = "PG"
	// ContactContactNationalityPH captures enum value "PH"
	ContactContactNationalityPH string = "PH"
	// ContactContactNationalityPK captures enum value "PK"
	ContactContactNationalityPK string = "PK"
	// ContactContactNationalityPL captures enum value "PL"
	ContactContactNationalityPL string = "PL"
	// ContactContactNationalityPM captures enum value "PM"
	ContactContactNationalityPM string = "PM"
	// ContactContactNationalityPN captures enum value "PN"
	ContactContactNationalityPN string = "PN"
	// ContactContactNationalityPR captures enum value "PR"
	ContactContactNationalityPR string = "PR"
	// ContactContactNationalityPS captures enum value "PS"
	ContactContactNationalityPS string = "PS"
	// ContactContactNationalityPT captures enum value "PT"
	ContactContactNationalityPT string = "PT"
	// ContactContactNationalityPW captures enum value "PW"
	ContactContactNationalityPW string = "PW"
	// ContactContactNationalityPY captures enum value "PY"
	ContactContactNationalityPY string = "PY"
	// ContactContactNationalityQA captures enum value "QA"
	ContactContactNationalityQA string = "QA"
	// ContactContactNationalityRE captures enum value "RE"
	ContactContactNationalityRE string = "RE"
	// ContactContactNationalityRO captures enum value "RO"
	ContactContactNationalityRO string = "RO"
	// ContactContactNationalityRS captures enum value "RS"
	ContactContactNationalityRS string = "RS"
	// ContactContactNationalityRU captures enum value "RU"
	ContactContactNationalityRU string = "RU"
	// ContactContactNationalityRW captures enum value "RW"
	ContactContactNationalityRW string = "RW"
	// ContactContactNationalitySA captures enum value "SA"
	ContactContactNationalitySA string = "SA"
	// ContactContactNationalitySB captures enum value "SB"
	ContactContactNationalitySB string = "SB"
	// ContactContactNationalitySC captures enum value "SC"
	ContactContactNationalitySC string = "SC"
	// ContactContactNationalitySD captures enum value "SD"
	ContactContactNationalitySD string = "SD"
	// ContactContactNationalitySE captures enum value "SE"
	ContactContactNationalitySE string = "SE"
	// ContactContactNationalitySG captures enum value "SG"
	ContactContactNationalitySG string = "SG"
	// ContactContactNationalitySH captures enum value "SH"
	ContactContactNationalitySH string = "SH"
	// ContactContactNationalitySI captures enum value "SI"
	ContactContactNationalitySI string = "SI"
	// ContactContactNationalitySJ captures enum value "SJ"
	ContactContactNationalitySJ string = "SJ"
	// ContactContactNationalitySK captures enum value "SK"
	ContactContactNationalitySK string = "SK"
	// ContactContactNationalitySL captures enum value "SL"
	ContactContactNationalitySL string = "SL"
	// ContactContactNationalitySM captures enum value "SM"
	ContactContactNationalitySM string = "SM"
	// ContactContactNationalitySN captures enum value "SN"
	ContactContactNationalitySN string = "SN"
	// ContactContactNationalitySO captures enum value "SO"
	ContactContactNationalitySO string = "SO"
	// ContactContactNationalitySR captures enum value "SR"
	ContactContactNationalitySR string = "SR"
	// ContactContactNationalitySS captures enum value "SS"
	ContactContactNationalitySS string = "SS"
	// ContactContactNationalityST captures enum value "ST"
	ContactContactNationalityST string = "ST"
	// ContactContactNationalitySV captures enum value "SV"
	ContactContactNationalitySV string = "SV"
	// ContactContactNationalitySX captures enum value "SX"
	ContactContactNationalitySX string = "SX"
	// ContactContactNationalitySY captures enum value "SY"
	ContactContactNationalitySY string = "SY"
	// ContactContactNationalitySZ captures enum value "SZ"
	ContactContactNationalitySZ string = "SZ"
	// ContactContactNationalityTA captures enum value "TA"
	ContactContactNationalityTA string = "TA"
	// ContactContactNationalityTC captures enum value "TC"
	ContactContactNationalityTC string = "TC"
	// ContactContactNationalityTD captures enum value "TD"
	ContactContactNationalityTD string = "TD"
	// ContactContactNationalityTF captures enum value "TF"
	ContactContactNationalityTF string = "TF"
	// ContactContactNationalityTG captures enum value "TG"
	ContactContactNationalityTG string = "TG"
	// ContactContactNationalityTH captures enum value "TH"
	ContactContactNationalityTH string = "TH"
	// ContactContactNationalityTJ captures enum value "TJ"
	ContactContactNationalityTJ string = "TJ"
	// ContactContactNationalityTK captures enum value "TK"
	ContactContactNationalityTK string = "TK"
	// ContactContactNationalityTL captures enum value "TL"
	ContactContactNationalityTL string = "TL"
	// ContactContactNationalityTM captures enum value "TM"
	ContactContactNationalityTM string = "TM"
	// ContactContactNationalityTN captures enum value "TN"
	ContactContactNationalityTN string = "TN"
	// ContactContactNationalityTO captures enum value "TO"
	ContactContactNationalityTO string = "TO"
	// ContactContactNationalityTR captures enum value "TR"
	ContactContactNationalityTR string = "TR"
	// ContactContactNationalityTT captures enum value "TT"
	ContactContactNationalityTT string = "TT"
	// ContactContactNationalityTV captures enum value "TV"
	ContactContactNationalityTV string = "TV"
	// ContactContactNationalityTW captures enum value "TW"
	ContactContactNationalityTW string = "TW"
	// ContactContactNationalityTZ captures enum value "TZ"
	ContactContactNationalityTZ string = "TZ"
	// ContactContactNationalityUA captures enum value "UA"
	ContactContactNationalityUA string = "UA"
	// ContactContactNationalityUG captures enum value "UG"
	ContactContactNationalityUG string = "UG"
	// ContactContactNationalityUM captures enum value "UM"
	ContactContactNationalityUM string = "UM"
	// ContactContactNationalityUNKNOWN captures enum value "UNKNOWN"
	ContactContactNationalityUNKNOWN string = "UNKNOWN"
	// ContactContactNationalityUS captures enum value "US"
	ContactContactNationalityUS string = "US"
	// ContactContactNationalityUY captures enum value "UY"
	ContactContactNationalityUY string = "UY"
	// ContactContactNationalityUZ captures enum value "UZ"
	ContactContactNationalityUZ string = "UZ"
	// ContactContactNationalityVA captures enum value "VA"
	ContactContactNationalityVA string = "VA"
	// ContactContactNationalityVC captures enum value "VC"
	ContactContactNationalityVC string = "VC"
	// ContactContactNationalityVE captures enum value "VE"
	ContactContactNationalityVE string = "VE"
	// ContactContactNationalityVG captures enum value "VG"
	ContactContactNationalityVG string = "VG"
	// ContactContactNationalityVI captures enum value "VI"
	ContactContactNationalityVI string = "VI"
	// ContactContactNationalityVN captures enum value "VN"
	ContactContactNationalityVN string = "VN"
	// ContactContactNationalityVU captures enum value "VU"
	ContactContactNationalityVU string = "VU"
	// ContactContactNationalityWF captures enum value "WF"
	ContactContactNationalityWF string = "WF"
	// ContactContactNationalityWS captures enum value "WS"
	ContactContactNationalityWS string = "WS"
	// ContactContactNationalityXK captures enum value "XK"
	ContactContactNationalityXK string = "XK"
	// ContactContactNationalityYE captures enum value "YE"
	ContactContactNationalityYE string = "YE"
	// ContactContactNationalityYT captures enum value "YT"
	ContactContactNationalityYT string = "YT"
	// ContactContactNationalityZA captures enum value "ZA"
	ContactContactNationalityZA string = "ZA"
	// ContactContactNationalityZM captures enum value "ZM"
	ContactContactNationalityZM string = "ZM"
	// ContactContactNationalityZW captures enum value "ZW"
	ContactContactNationalityZW string = "ZW"
)

// prop value enum
func (m *ContactContact) validateNationalityEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, contactContactTypeNationalityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ContactContact) validateNationality(formats strfmt.Registry) error {

	if swag.IsZero(m.Nationality) { // not required
		return nil
	}

	// value enum
	if err := m.validateNationalityEnum("nationality", "body", m.Nationality); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContactContact) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactContact) UnmarshalBinary(b []byte) error {
	var res ContactContact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

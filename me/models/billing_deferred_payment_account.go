// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BillingDeferredPaymentAccount Deferred payment account info
// swagger:model billing.DeferredPaymentAccount
type BillingDeferredPaymentAccount struct {

	// creation date
	// Required: true
	// Read Only: true
	CreationDate strfmt.DateTime `json:"creationDate"`

	// default payment mean
	// Required: true
	// Read Only: true
	DefaultPaymentMean bool `json:"defaultPaymentMean"`

	// Custom description of this account
	Description string `json:"description,omitempty"`

	// id
	// Required: true
	// Read Only: true
	ID int64 `json:"id"`

	// Deferred account type
	// Read Only: true
	Label string `json:"label,omitempty"`

	// state
	// Required: true
	// Read Only: true
	State string `json:"state"`
}

// Validate validates this billing deferred payment account
func (m *BillingDeferredPaymentAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDefaultPaymentMean(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BillingDeferredPaymentAccount) validateCreationDate(formats strfmt.Registry) error {

	if err := validate.Required("creationDate", "body", strfmt.DateTime(m.CreationDate)); err != nil {
		return err
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *BillingDeferredPaymentAccount) validateDefaultPaymentMean(formats strfmt.Registry) error {

	if err := validate.Required("defaultPaymentMean", "body", bool(m.DefaultPaymentMean)); err != nil {
		return err
	}

	return nil
}

func (m *BillingDeferredPaymentAccount) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", int64(m.ID)); err != nil {
		return err
	}

	return nil
}

var billingDeferredPaymentAccountTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["valid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		billingDeferredPaymentAccountTypeStatePropEnum = append(billingDeferredPaymentAccountTypeStatePropEnum, v)
	}
}

const (
	// BillingDeferredPaymentAccountStateValid captures enum value "valid"
	BillingDeferredPaymentAccountStateValid string = "valid"
)

// prop value enum
func (m *BillingDeferredPaymentAccount) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, billingDeferredPaymentAccountTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *BillingDeferredPaymentAccount) validateState(formats strfmt.Registry) error {

	if err := validate.RequiredString("state", "body", string(m.State)); err != nil {
		return err
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BillingDeferredPaymentAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BillingDeferredPaymentAccount) UnmarshalBinary(b []byte) error {
	var res BillingDeferredPaymentAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BillingItemDetailOrderPlan Plan data from order
// swagger:model billing.ItemDetail.OrderPlan
type BillingItemDetailOrderPlan struct {

	// Plan code used when ordering through /order/cart
	Code string `json:"code,omitempty"`

	// Duration chosen when ordering through /order/cart (ISO 8601)
	Duration string `json:"duration,omitempty"`

	// Pricing mode used when ordering through /order/cart
	PricingMode string `json:"pricingMode,omitempty"`

	// product
	Product *BillingItemDetailOrderPlanProduct `json:"product,omitempty"`

	// Quantity ordered
	Quantity int64 `json:"quantity,omitempty"`
}

// Validate validates this billing item detail order plan
func (m *BillingItemDetailOrderPlan) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProduct(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BillingItemDetailOrderPlan) validateProduct(formats strfmt.Registry) error {

	if swag.IsZero(m.Product) { // not required
		return nil
	}

	if m.Product != nil {

		if err := m.Product.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("product")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BillingItemDetailOrderPlan) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BillingItemDetailOrderPlan) UnmarshalBinary(b []byte) error {
	var res BillingItemDetailOrderPlan
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

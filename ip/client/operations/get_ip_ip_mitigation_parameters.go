// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetIPIPMitigationParams creates a new GetIPIPMitigationParams object
// with the default values initialized.
func NewGetIPIPMitigationParams() *GetIPIPMitigationParams {
	var (
		autoDefault = bool(false)
	)
	return &GetIPIPMitigationParams{
		Auto: &autoDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIPIPMitigationParamsWithTimeout creates a new GetIPIPMitigationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIPIPMitigationParamsWithTimeout(timeout time.Duration) *GetIPIPMitigationParams {
	var (
		autoDefault = bool(false)
	)
	return &GetIPIPMitigationParams{
		Auto: &autoDefault,

		timeout: timeout,
	}
}

// NewGetIPIPMitigationParamsWithContext creates a new GetIPIPMitigationParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIPIPMitigationParamsWithContext(ctx context.Context) *GetIPIPMitigationParams {
	var (
		autoDefault = bool(false)
	)
	return &GetIPIPMitigationParams{
		Auto: &autoDefault,

		Context: ctx,
	}
}

// NewGetIPIPMitigationParamsWithHTTPClient creates a new GetIPIPMitigationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIPIPMitigationParamsWithHTTPClient(client *http.Client) *GetIPIPMitigationParams {
	var (
		autoDefault = bool(false)
	)
	return &GetIPIPMitigationParams{
		Auto:       &autoDefault,
		HTTPClient: client,
	}
}

/*GetIPIPMitigationParams contains all the parameters to send to the API endpoint
for the get IP IP mitigation operation typically these are written to a http.Request
*/
type GetIPIPMitigationParams struct {

	/*Auto*/
	Auto *bool
	/*IP*/
	IP string
	/*State*/
	State *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithTimeout(timeout time.Duration) *GetIPIPMitigationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithContext(ctx context.Context) *GetIPIPMitigationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithHTTPClient(client *http.Client) *GetIPIPMitigationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuto adds the auto to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithAuto(auto *bool) *GetIPIPMitigationParams {
	o.SetAuto(auto)
	return o
}

// SetAuto adds the auto to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetAuto(auto *bool) {
	o.Auto = auto
}

// WithIP adds the ip to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithIP(ip string) *GetIPIPMitigationParams {
	o.SetIP(ip)
	return o
}

// SetIP adds the ip to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetIP(ip string) {
	o.IP = ip
}

// WithState adds the state to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) WithState(state *string) *GetIPIPMitigationParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the get IP IP mitigation params
func (o *GetIPIPMitigationParams) SetState(state *string) {
	o.State = state
}

// WriteToRequest writes these params to a swagger request
func (o *GetIPIPMitigationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Auto != nil {

		// query param auto
		var qrAuto bool
		if o.Auto != nil {
			qrAuto = *o.Auto
		}
		qAuto := swag.FormatBool(qrAuto)
		if qAuto != "" {
			if err := r.SetQueryParam("auto", qAuto); err != nil {
				return err
			}
		}

	}

	// path param ip
	if err := r.SetPathParam("ip", o.IP); err != nil {
		return err
	}

	if o.State != nil {

		// query param state
		var qrState string
		if o.State != nil {
			qrState = *o.State
		}
		qState := qrState
		if qState != "" {
			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

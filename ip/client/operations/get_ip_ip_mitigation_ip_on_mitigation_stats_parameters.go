// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetIPIPMitigationIPOnMitigationStatsParams creates a new GetIPIPMitigationIPOnMitigationStatsParams object
// with the default values initialized.
func NewGetIPIPMitigationIPOnMitigationStatsParams() *GetIPIPMitigationIPOnMitigationStatsParams {
	var ()
	return &GetIPIPMitigationIPOnMitigationStatsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIPIPMitigationIPOnMitigationStatsParamsWithTimeout creates a new GetIPIPMitigationIPOnMitigationStatsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIPIPMitigationIPOnMitigationStatsParamsWithTimeout(timeout time.Duration) *GetIPIPMitigationIPOnMitigationStatsParams {
	var ()
	return &GetIPIPMitigationIPOnMitigationStatsParams{

		timeout: timeout,
	}
}

// NewGetIPIPMitigationIPOnMitigationStatsParamsWithContext creates a new GetIPIPMitigationIPOnMitigationStatsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIPIPMitigationIPOnMitigationStatsParamsWithContext(ctx context.Context) *GetIPIPMitigationIPOnMitigationStatsParams {
	var ()
	return &GetIPIPMitigationIPOnMitigationStatsParams{

		Context: ctx,
	}
}

// NewGetIPIPMitigationIPOnMitigationStatsParamsWithHTTPClient creates a new GetIPIPMitigationIPOnMitigationStatsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIPIPMitigationIPOnMitigationStatsParamsWithHTTPClient(client *http.Client) *GetIPIPMitigationIPOnMitigationStatsParams {
	var ()
	return &GetIPIPMitigationIPOnMitigationStatsParams{
		HTTPClient: client,
	}
}

/*GetIPIPMitigationIPOnMitigationStatsParams contains all the parameters to send to the API endpoint
for the get IP IP mitigation IP on mitigation stats operation typically these are written to a http.Request
*/
type GetIPIPMitigationIPOnMitigationStatsParams struct {

	/*From*/
	From strfmt.DateTime
	/*IP*/
	IP string
	/*IPOnMitigation*/
	IPOnMitigation string
	/*Scale*/
	Scale string
	/*To*/
	To strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithTimeout(timeout time.Duration) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithContext(ctx context.Context) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithHTTPClient(client *http.Client) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithFrom(from strfmt.DateTime) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetFrom(from strfmt.DateTime) {
	o.From = from
}

// WithIP adds the ip to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithIP(ip string) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetIP(ip)
	return o
}

// SetIP adds the ip to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetIP(ip string) {
	o.IP = ip
}

// WithIPOnMitigation adds the iPOnMitigation to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithIPOnMitigation(iPOnMitigation string) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetIPOnMitigation(iPOnMitigation)
	return o
}

// SetIPOnMitigation adds the ipOnMitigation to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetIPOnMitigation(iPOnMitigation string) {
	o.IPOnMitigation = iPOnMitigation
}

// WithScale adds the scale to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithScale(scale string) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetScale(scale)
	return o
}

// SetScale adds the scale to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetScale(scale string) {
	o.Scale = scale
}

// WithTo adds the to to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WithTo(to strfmt.DateTime) *GetIPIPMitigationIPOnMitigationStatsParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get IP IP mitigation IP on mitigation stats params
func (o *GetIPIPMitigationIPOnMitigationStatsParams) SetTo(to strfmt.DateTime) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetIPIPMitigationIPOnMitigationStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param from
	qrFrom := o.From
	qFrom := qrFrom.String()
	if qFrom != "" {
		if err := r.SetQueryParam("from", qFrom); err != nil {
			return err
		}
	}

	// path param ip
	if err := r.SetPathParam("ip", o.IP); err != nil {
		return err
	}

	// path param ipOnMitigation
	if err := r.SetPathParam("ipOnMitigation", o.IPOnMitigation); err != nil {
		return err
	}

	// query param scale
	qrScale := o.Scale
	qScale := qrScale
	if qScale != "" {
		if err := r.SetQueryParam("scale", qScale); err != nil {
			return err
		}
	}

	// query param to
	qrTo := o.To
	qTo := qrTo.String()
	if qTo != "" {
		if err := r.SetQueryParam("to", qTo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

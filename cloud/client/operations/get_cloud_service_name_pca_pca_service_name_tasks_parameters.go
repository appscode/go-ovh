// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCloudServiceNamePcaPcaServiceNameTasksParams creates a new GetCloudServiceNamePcaPcaServiceNameTasksParams object
// with the default values initialized.
func NewGetCloudServiceNamePcaPcaServiceNameTasksParams() *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	var ()
	return &GetCloudServiceNamePcaPcaServiceNameTasksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithTimeout creates a new GetCloudServiceNamePcaPcaServiceNameTasksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithTimeout(timeout time.Duration) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	var ()
	return &GetCloudServiceNamePcaPcaServiceNameTasksParams{

		timeout: timeout,
	}
}

// NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithContext creates a new GetCloudServiceNamePcaPcaServiceNameTasksParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithContext(ctx context.Context) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	var ()
	return &GetCloudServiceNamePcaPcaServiceNameTasksParams{

		Context: ctx,
	}
}

// NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithHTTPClient creates a new GetCloudServiceNamePcaPcaServiceNameTasksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCloudServiceNamePcaPcaServiceNameTasksParamsWithHTTPClient(client *http.Client) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	var ()
	return &GetCloudServiceNamePcaPcaServiceNameTasksParams{
		HTTPClient: client,
	}
}

/*GetCloudServiceNamePcaPcaServiceNameTasksParams contains all the parameters to send to the API endpoint
for the get cloud service name pca pca service name tasks operation typically these are written to a http.Request
*/
type GetCloudServiceNamePcaPcaServiceNameTasksParams struct {

	/*Function*/
	Function *string
	/*PcaServiceName*/
	PcaServiceName string
	/*ServiceName*/
	ServiceName string
	/*Status*/
	Status *string
	/*TodoDateFrom*/
	TodoDateFrom *strfmt.DateTime
	/*TodoDateTo*/
	TodoDateTo *strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithTimeout(timeout time.Duration) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithContext(ctx context.Context) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithHTTPClient(client *http.Client) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFunction adds the function to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithFunction(function *string) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetFunction(function)
	return o
}

// SetFunction adds the function to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetFunction(function *string) {
	o.Function = function
}

// WithPcaServiceName adds the pcaServiceName to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithPcaServiceName(pcaServiceName string) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetPcaServiceName(pcaServiceName)
	return o
}

// SetPcaServiceName adds the pcaServiceName to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetPcaServiceName(pcaServiceName string) {
	o.PcaServiceName = pcaServiceName
}

// WithServiceName adds the serviceName to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithServiceName(serviceName string) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithStatus adds the status to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithStatus(status *string) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetStatus(status *string) {
	o.Status = status
}

// WithTodoDateFrom adds the todoDateFrom to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithTodoDateFrom(todoDateFrom *strfmt.DateTime) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetTodoDateFrom(todoDateFrom)
	return o
}

// SetTodoDateFrom adds the todoDateFrom to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetTodoDateFrom(todoDateFrom *strfmt.DateTime) {
	o.TodoDateFrom = todoDateFrom
}

// WithTodoDateTo adds the todoDateTo to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WithTodoDateTo(todoDateTo *strfmt.DateTime) *GetCloudServiceNamePcaPcaServiceNameTasksParams {
	o.SetTodoDateTo(todoDateTo)
	return o
}

// SetTodoDateTo adds the todoDateTo to the get cloud service name pca pca service name tasks params
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) SetTodoDateTo(todoDateTo *strfmt.DateTime) {
	o.TodoDateTo = todoDateTo
}

// WriteToRequest writes these params to a swagger request
func (o *GetCloudServiceNamePcaPcaServiceNameTasksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Function != nil {

		// query param function
		var qrFunction string
		if o.Function != nil {
			qrFunction = *o.Function
		}
		qFunction := qrFunction
		if qFunction != "" {
			if err := r.SetQueryParam("function", qFunction); err != nil {
				return err
			}
		}

	}

	// path param pcaServiceName
	if err := r.SetPathParam("pcaServiceName", o.PcaServiceName); err != nil {
		return err
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	if o.TodoDateFrom != nil {

		// query param todoDate.from
		var qrTodoDateFrom strfmt.DateTime
		if o.TodoDateFrom != nil {
			qrTodoDateFrom = *o.TodoDateFrom
		}
		qTodoDateFrom := qrTodoDateFrom.String()
		if qTodoDateFrom != "" {
			if err := r.SetQueryParam("todoDate.from", qTodoDateFrom); err != nil {
				return err
			}
		}

	}

	if o.TodoDateTo != nil {

		// query param todoDate.to
		var qrTodoDateTo strfmt.DateTime
		if o.TodoDateTo != nil {
			qrTodoDateTo = *o.TodoDateTo
		}
		qTodoDateTo := qrTodoDateTo.String()
		if qTodoDateTo != "" {
			if err := r.SetQueryParam("todoDate.to", qTodoDateTo); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams creates a new DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams object
// with the default values initialized.
func NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams() *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	var ()
	return &DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithTimeout creates a new DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithTimeout(timeout time.Duration) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	var ()
	return &DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams{

		timeout: timeout,
	}
}

// NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithContext creates a new DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithContext(ctx context.Context) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	var ()
	return &DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams{

		Context: ctx,
	}
}

// NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithHTTPClient creates a new DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParamsWithHTTPClient(client *http.Client) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	var ()
	return &DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams{
		HTTPClient: client,
	}
}

/*DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams contains all the parameters to send to the API endpoint
for the delete cloud project service name network private network ID subnet subnet ID operation typically these are written to a http.Request
*/
type DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams struct {

	/*NetworkID*/
	NetworkID string
	/*ServiceName*/
	ServiceName string
	/*SubnetID*/
	SubnetID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithTimeout(timeout time.Duration) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithContext(ctx context.Context) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithHTTPClient(client *http.Client) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithNetworkID(networkID string) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithServiceName adds the serviceName to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithServiceName(serviceName string) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithSubnetID adds the subnetID to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WithSubnetID(subnetID string) *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams {
	o.SetSubnetID(subnetID)
	return o
}

// SetSubnetID adds the subnetId to the delete cloud project service name network private network ID subnet subnet ID params
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) SetSubnetID(subnetID string) {
	o.SubnetID = subnetID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCloudProjectServiceNameNetworkPrivateNetworkIDSubnetSubnetIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	// path param subnetId
	if err := r.SetPathParam("subnetId", o.SubnetID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudBillingViewHourlyResources HourlyResources
// swagger:model cloud.BillingView.HourlyResources
type CloudBillingViewHourlyResources struct {

	// instance
	// Required: true
	Instance CloudBillingViewHourlyResourcesInstance `json:"instance"`

	// snapshot
	// Required: true
	Snapshot CloudBillingViewHourlyResourcesSnapshot `json:"snapshot"`

	// storage
	// Required: true
	Storage CloudBillingViewHourlyResourcesStorage `json:"storage"`

	// volume
	// Required: true
	Volume CloudBillingViewHourlyResourcesVolume `json:"volume"`
}

// Validate validates this cloud billing view hourly resources
func (m *CloudBillingViewHourlyResources) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstance(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSnapshot(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStorage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVolume(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudBillingViewHourlyResources) validateInstance(formats strfmt.Registry) error {

	if err := validate.Required("instance", "body", m.Instance); err != nil {
		return err
	}

	if err := m.Instance.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("instance")
		}
		return err
	}

	return nil
}

func (m *CloudBillingViewHourlyResources) validateSnapshot(formats strfmt.Registry) error {

	if err := validate.Required("snapshot", "body", m.Snapshot); err != nil {
		return err
	}

	if err := m.Snapshot.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("snapshot")
		}
		return err
	}

	return nil
}

func (m *CloudBillingViewHourlyResources) validateStorage(formats strfmt.Registry) error {

	if err := validate.Required("storage", "body", m.Storage); err != nil {
		return err
	}

	if err := m.Storage.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("storage")
		}
		return err
	}

	return nil
}

func (m *CloudBillingViewHourlyResources) validateVolume(formats strfmt.Registry) error {

	if err := validate.Required("volume", "body", m.Volume); err != nil {
		return err
	}

	if err := m.Volume.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("volume")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudBillingViewHourlyResources) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudBillingViewHourlyResources) UnmarshalBinary(b []byte) error {
	var res CloudBillingViewHourlyResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

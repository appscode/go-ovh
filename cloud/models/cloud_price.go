// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017 The go-ovh Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CloudPrice A structure defining prices for cloud services
// swagger:model cloud.Price
type CloudPrice struct {

	// archive
	Archive CloudPriceArchive `json:"archive"`

	// bandwidth archive in
	BandwidthArchiveIn CloudPriceBandwidthArchiveIn `json:"bandwidthArchiveIn"`

	// bandwidth archive out
	BandwidthArchiveOut CloudPriceBandwidthArchiveOut `json:"bandwidthArchiveOut"`

	// bandwidth storage
	BandwidthStorage CloudPriceBandwidthStorage `json:"bandwidthStorage"`

	// instances
	Instances CloudPriceInstances `json:"instances"`

	// project creation
	ProjectCreation *OrderPrice `json:"projectCreation,omitempty"`

	// snapshots
	Snapshots CloudPriceSnapshots `json:"snapshots"`

	// storage
	Storage CloudPriceStorage `json:"storage"`

	// volumes
	Volumes CloudPriceVolumes `json:"volumes"`
}

// Validate validates this cloud price
func (m *CloudPrice) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProjectCreation(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudPrice) validateProjectCreation(formats strfmt.Registry) error {

	if swag.IsZero(m.ProjectCreation) { // not required
		return nil
	}

	if m.ProjectCreation != nil {

		if err := m.ProjectCreation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("projectCreation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CloudPrice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudPrice) UnmarshalBinary(b []byte) error {
	var res CloudPrice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
